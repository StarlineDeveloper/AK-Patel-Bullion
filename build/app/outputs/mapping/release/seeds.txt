com.dexterous.flutterlocalnotifications.NotificationStyle
org.chromium.support_lib_boundary.ServiceWorkerClientBoundaryInterface
org.chromium.support_lib_boundary.WebViewCookieManagerBoundaryInterface
androidx.media.AudioAttributesImplBase
com.dexterous.flutterlocalnotifications.models.IconSource
androidx.window.embedding.ActivityFilter
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter
androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface
androidx.window.embedding.ActivityStack
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback
com.dexterous.flutterlocalnotifications.utils.BooleanUtils
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar
io.flutter.embedding.engine.FlutterOverlaySurface
kotlin.internal.jdk7.JDK7PlatformImplementations
com.dexterous.flutterlocalnotifications.ActionBroadcastReceiver
io.flutter.plugins.firebase.core.FlutterFirebasePlugin
androidx.window.embedding.SplitController$Companion
androidx.core.graphics.drawable.IconCompat
com.google.firebase.ktx.FirebaseCommonKtxRegistrar
org.chromium.support_lib_boundary.WebMessageCallbackBoundaryInterface
androidx.window.layout.SidecarAdapter$Companion
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingInitProvider
androidx.window.embedding.ExtensionEmbeddingBackend$Companion
com.dexterous.flutterlocalnotifications.ScheduledNotificationBootReceiver
com.dexterous.flutterlocalnotifications.models.PersonDetails
androidx.window.layout.FoldingFeature$State
com.akpatelbullion.MainActivity
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin
androidx.window.layout.FoldingFeature$Orientation$Companion
org.chromium.support_lib_boundary.WebResourceRequestBoundaryInterface
androidx.window.layout.ActivityCompatHelperApi24
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery
com.dexterous.flutterlocalnotifications.models.DateTimeComponents
android.support.v4.media.session.MediaSessionCompat$QueueItem
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback
io.flutter.view.AccessibilityViewEmbedder
io.flutter.plugins.urllauncher.WebViewActivity
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction
androidx.lifecycle.Lifecycling$1
androidx.window.layout.HardwareFoldingFeature$Type$Companion
android.support.v4.media.session.ParcelableVolumeInfo
androidx.media.AudioAttributesImplApi26
androidx.window.core.ExperimentalWindowApi
android.support.v4.media.AudioAttributesImplApi21Parcelizer
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails
androidx.lifecycle.SingleGeneratedAdapterObserver
kotlinx.coroutines.internal.StackTraceRecoveryKt
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper
com.dexterous.flutterlocalnotifications.models.BitmapSource
androidx.window.layout.SidecarWindowBackend$Companion
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader
com.dexterous.flutterlocalnotifications.models.Time
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface
android.support.v4.media.session.MediaSessionCompat$Token
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface
androidx.window.layout.SidecarCompat$TranslatingCallback
androidx.window.embedding.EmbeddingBackend
androidx.window.layout.FoldingFeature$Orientation
androidx.window.layout.WindowMetricsCalculatorDecorator
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService
androidx.window.embedding.SplitController
androidx.window.layout.DisplayCompatHelperApi17
androidx.window.layout.ExtensionInterfaceCompat
androidx.window.core.Version
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface
com.google.firebase.messaging.FirebaseMessagingRegistrar
com.google.firebase.installations.FirebaseInstallationsRegistrar
androidx.window.layout.WindowMetricsCalculator$Companion
org.chromium.support_lib_boundary.IsomorphicObjectBoundaryInterface
com.google.android.gms.measurement.AppMeasurement
androidx.window.embedding.EmbeddingTranslatingCallback
android.support.v4.media.AudioAttributesCompatParcelizer
com.google.firebase.iid.FirebaseInstanceId
androidx.window.R
androidx.window.layout.FoldingFeature
com.google.firebase.FirebaseCommonRegistrar
android.support.v4.media.MediaDescriptionCompat
com.google.android.gms.common.GooglePlayServicesIncorrectManifestValueException
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface
kotlin.coroutines.jvm.internal.BaseContinuationImpl
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation
com.google.firebase.analytics.FirebaseAnalytics
com.google.firebase.concurrent.ExecutorsRegistrar
android.support.v4.media.session.PlaybackStateCompat$CustomAction
com.google.android.gms.measurement.AppMeasurementJobService
androidx.window.embedding.SplitPairRule
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1
androidx.window.embedding.EmptyEmbeddingComponent
androidx.window.layout.WindowInfoTracker
androidx.window.embedding.SplitRule
androidx.window.embedding.EmbeddingInterfaceCompat
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper
io.flutter.embedding.engine.FlutterJNI
androidx.window.layout.HardwareFoldingFeature$Type
androidx.window.layout.WindowInfoTrackerImpl$Companion
com.google.android.gms.common.internal.ReflectedParcelable
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer
org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface
android.support.v4.media.AudioAttributesImplApi26Parcelizer
androidx.window.embedding.EmbeddingAdapter
com.google.firebase.provider.FirebaseInitProvider
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver
androidx.window.layout.EmptyDecorator
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar
androidx.lifecycle.CompositeGeneratedAdaptersObserver
androidx.window.layout.FoldingFeature$OcclusionType$Companion
androidx.window.R$styleable
androidx.window.embedding.SplitRuleParser
androidx.window.layout.WindowMetrics
androidx.window.layout.DisplayFeature
com.google.firebase.messaging.FirebaseMessaging
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1
com.google.android.gms.measurement.AppMeasurementService
androidx.fragment.app.Fragment$2
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException
android.support.v4.media.MediaMetadataCompat
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1
com.dexterous.flutterlocalnotifications.RepeatInterval
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingReceiver
androidx.savedstate.SavedStateRegistry$1
com.dexterous.flutterlocalnotifications.models.styles.StyleInformation
dev.fluttercommunity.plus.share.ShareFileProvider
androidx.activity.ComponentActivity$3
androidx.versionedparcelable.ParcelImpl
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface
io.flutter.plugins.firebase.messaging.FlutterFirebaseAppRegistrar
androidx.activity.ImmLeaksCleaner
androidx.webkit.WebViewClientCompat
androidx.media.AudioAttributesCompat
androidx.window.embedding.SplitRule$LayoutDir
com.google.firebase.analytics.ktx.FirebaseAnalyticsKtxRegistrar
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService
com.google.android.gms.common.api.Status
com.dexterous.flutterlocalnotifications.models.SoundSource
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference
androidx.window.core.Version$bigInteger$2
androidx.media.AudioAttributesImplApi21
android.support.v4.media.AudioAttributesImplBaseParcelizer
kotlin.internal.jdk8.JDK8PlatformImplementations
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty
androidx.lifecycle.ReflectiveGenericLifecycleObserver
com.google.firebase.iid.Registrar
io.flutter.embedding.android.FlutterSplashView$SavedState
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface$WebMessagePayloadType
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface
org.chromium.support_lib_boundary.VisualStateCallbackBoundaryInterface
androidx.window.layout.WindowInfoTrackerDecorator
org.chromium.support_lib_boundary.ProcessGlobalConfigConstants$ProcessGlobalConfigMapKey
androidx.window.core.Version$Companion
androidx.window.R$id
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1
androidx.window.embedding.SplitRule$Api30Impl
androidx.window.layout.SidecarWindowBackend
androidx.window.layout.WindowMetricsCalculatorCompat
android.support.v4.media.MediaBrowserCompat$ItemReceiver
androidx.core.app.RemoteActionCompat
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor
org.chromium.support_lib_boundary.WebAuthnCallbackBoundaryInterface
androidx.savedstate.Recreator
com.google.firebase.components.ComponentDiscoveryService
androidx.lifecycle.LiveData$LifecycleBoundObserver
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface
androidx.window.layout.SidecarCompat$Companion
androidx.window.layout.SidecarAdapter
dev.fluttercommunity.plus.share.SharePlusPendingIntent
androidx.lifecycle.FullLifecycleObserverAdapter
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface
com.google.android.gms.common.api.internal.LifecycleCallback
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
android.support.v4.graphics.drawable.IconCompatParcelizer
com.google.firebase.components.ComponentRegistrar
androidx.window.embedding.EmbeddingRule
androidx.window.layout.SidecarCompat$FirstAttachAdapter
io.flutter.view.FlutterCallbackInformation
com.google.android.gms.common.api.GoogleApiActivity
org.chromium.support_lib_boundary.StaticsBoundaryInterface
com.google.firebase.datatransport.TransportRegistrar
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack
androidx.window.R$attr
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper
android.support.v4.media.MediaBrowserCompat$MediaItem
androidx.window.embedding.SplitPairFilter
androidx.window.embedding.EmbeddingCompat$Companion
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1
kotlinx.coroutines.android.AndroidDispatcherFactory
org.chromium.support_lib_boundary.ScriptHandlerBoundaryInterface
androidx.window.embedding.ActivityRule
androidx.window.embedding.SplitInfo
androidx.window.layout.ExtensionWindowLayoutInfoBackend
com.dexterous.flutterlocalnotifications.utils.StringUtils
com.google.android.datatransport.cct.CctBackendFactory
androidx.window.layout.HardwareFoldingFeature$Companion
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior
androidx.window.layout.WindowInfoTrackerImpl
androidx.media.AudioAttributesImplBaseParcelizer
com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation
com.google.android.gms.auth.api.signin.GoogleSignInAccount
androidx.window.embedding.EmbeddingCompat
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl
com.google.android.gms.common.GooglePlayServicesManifestException
androidx.versionedparcelable.CustomVersionedParcelable
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingService
androidx.window.layout.FoldingFeature$State$Companion
androidx.window.layout.SidecarCompat$DistinctElementCallback
androidx.core.app.RemoteActionCompatParcelizer
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation
com.google.android.gms.common.api.Scope
com.google.firebase.iid.FirebaseInstanceIdReceiver
com.google.firebase.messaging.FirebaseMessagingService
androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface
androidx.window.layout.FoldingFeature$OcclusionType
org.chromium.support_lib_boundary.WebMessageListenerBoundaryInterface
com.google.android.gms.measurement.AppMeasurementReceiver
androidx.window.embedding.SplitPlaceholderRule
com.google.android.gms.common.api.internal.BasePendingResult
androidx.media.AudioAttributesCompatParcelizer
org.chromium.support_lib_boundary.WebMessageBoundaryInterface
org.chromium.support_lib_boundary.FeatureFlagHolderBoundaryInterface
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation
androidx.core.graphics.drawable.IconCompatParcelizer
androidx.window.layout.WindowBackend
androidx.window.layout.WindowInfoTracker$Companion
androidx.window.embedding.MatcherUtils
androidx.window.layout.DisplayCompatHelperApi28
androidx.window.layout.HardwareFoldingFeature
com.google.android.gms.common.annotation.KeepName
androidx.media.AudioAttributesImpl
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface
com.dexterous.flutterlocalnotifications.models.MessageDetails
androidx.window.core.Bounds
androidx.annotation.Keep
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$WebAuthnSupport
io.flutter.plugin.platform.SingleViewPresentation
androidx.window.embedding.ExtensionEmbeddingBackend
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface
android.support.v4.media.session.PlaybackStateCompat
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback
com.dexterous.flutterlocalnotifications.models.NotificationAction
org.chromium.support_lib_boundary.JsReplyProxyBoundaryInterface
androidx.window.layout.WindowLayoutInfo
android.support.v4.media.RatingCompat
androidx.window.java.R
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory
androidx.media.AudioAttributesImplApi21Parcelizer
androidx.window.layout.SidecarCompat
com.dexterous.flutterlocalnotifications.ScheduledNotificationReceiver
androidx.window.layout.ActivityCompatHelperApi30
org.chromium.support_lib_boundary.ProcessGlobalConfigConstants
android.support.v4.app.RemoteActionCompatParcelizer
com.dexterous.flutterlocalnotifications.models.NotificationDetails
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl
org.chromium.support_lib_boundary.WebViewRendererClientBoundaryInterface
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver
androidx.activity.ComponentActivity$2
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface
io.flutter.plugins.GeneratedPluginRegistrant
androidx.media.AudioAttributesImplApi26Parcelizer
androidx.window.layout.WindowMetricsCalculator
com.google.android.gms.common.util.DynamiteApi
androidx.core.app.CoreComponentFactory
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean colorized
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
androidx.window.embedding.SplitController: boolean sDebug
androidx.window.layout.SidecarWindowBackend: java.lang.String TAG
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String PAYLOAD
com.dexterous.flutterlocalnotifications.models.SoundSource: com.dexterous.flutterlocalnotifications.models.SoundSource[] $VALUES
kotlinx.coroutines.channels.ArrayChannel: int size
kotlinx.coroutines.CompletedExceptionally: int _handled
com.google.android.gms.internal.measurement.zzgd: int zzJ
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean enableLights
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String channelName
androidx.window.embedding.EmbeddingCompat: java.lang.String TAG
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_ACTIVE_NOTIFICATION_MESSAGING_STYLE_ERROR_CODE
android.support.v4.media.MediaDescriptionCompat: android.os.Parcelable$Creator CREATOR
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface$WebMessagePayloadType: int TYPE_STRING
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_CONTENT_TITLE
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.concurrent.locks.ReentrantLock extensionWindowBackendLock
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String DAY
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type type
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzli zzi
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String name
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: int label
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetricsCalculator$Companion $$INSTANCE
com.google.android.gms.internal.measurement.zzfz: java.lang.String zze
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: androidx.window.layout.WindowMetricsCalculator$Companion$reset$1 INSTANCE
com.google.android.gms.common.zzs: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
com.google.android.gms.internal.measurement.zzfh: java.lang.String zzf
androidx.window.embedding.SplitRule: float splitRatio
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
io.flutter.embedding.engine.FlutterJNI: float refreshRateFPS
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzli zzae
androidx.window.layout.SidecarCompat: java.lang.String TAG
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String USES_CHRONOMETER
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String channelId
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzX
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mCreationTimestamp
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback animationCallback
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer importance
androidx.window.R$styleable: int SplitPairRule_finishSecondaryWithPrimary
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mTriggeredEventParams
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: java.lang.Runnable onFrameConsumed
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean playSound
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean $assertionsDisabled
androidx.window.embedding.ExtensionEmbeddingBackend: java.lang.String TAG
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackClassName
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SET_AS_GROUP_SUMMARY
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Integer audioAttributesUsage
com.google.android.gms.internal.measurement.zzgd: long zzx
com.dexterous.flutterlocalnotifications.models.MessageDetails: java.lang.Long timestamp
com.google.android.gms.internal.measurement.zzft: com.google.android.gms.internal.measurement.zzli zze
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzaf
io.flutter.embedding.engine.FlutterJNI: java.lang.String TAG
androidx.window.R$styleable: int[] ActivityRule
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String CANCEL_NOTIFICATION
androidx.window.R$styleable: int SplitPairFilter_primaryActivityName
com.google.firebase.messaging.FirebaseMessagingRegistrar: java.lang.String LIBRARY_NAME
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean ongoing
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTimeToLive
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
kotlinx.coroutines.CancelledContinuation: int _resumed
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String icon
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Integer ledColor
com.google.android.gms.internal.measurement.zzer: java.lang.String zzi
com.google.android.gms.internal.measurement.zzey: com.google.android.gms.internal.measurement.zzli zzh
androidx.window.embedding.SplitRule: int minSmallestWidth
io.flutter.plugin.platform.SingleViewPresentation: java.lang.String TAG
com.google.android.gms.internal.measurement.zzgd: long zzag
com.google.android.gms.internal.measurement.zzgi: com.google.android.gms.internal.measurement.zzgi zza
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String REPEAT_INTERVAL
com.google.android.gms.internal.measurement.zzft: int zzd
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.platform.PlatformViewsController platformViewsController
com.google.android.gms.internal.measurement.zzgb: com.google.android.gms.internal.measurement.zzli zzd
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String category
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String shortcutId
kotlin.jvm.internal.FunctionReference: int arity
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String PENDING_NOTIFICATION_REQUESTS_METHOD
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String subText
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.util.List actionInputs
com.google.android.gms.internal.measurement.zzgd: boolean zzF
com.google.android.gms.internal.measurement.zzlb: com.google.android.gms.internal.measurement.zznl zzc
io.flutter.plugin.platform.SingleViewPresentation: android.view.View$OnFocusChangeListener focusChangeListener
androidx.window.core.Version: kotlin.Lazy bigInteger$delegate
com.google.android.gms.internal.measurement.zzgg: com.google.android.gms.internal.measurement.zzgg zza
androidx.window.embedding.SplitRule: int minWidth
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String NAME
kotlin.jvm.internal.CallableReference: boolean isTopLevel
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String NOTIFICATION_RESPONSE_TYPE
io.flutter.view.AccessibilityViewEmbedder: android.util.SparseArray flutterIdToOrigin
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String COLORIZED
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SHOW_PROGRESS
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction Update
com.google.android.gms.measurement.internal.zzau: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfv: java.lang.String zze
com.google.android.gms.internal.measurement.zzgi: com.google.android.gms.internal.measurement.zzlh zzd
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: java.util.concurrent.ExecutorService cachedThreadPool
com.dexterous.flutterlocalnotifications.models.Time: java.lang.Integer minute
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: java.lang.String MODULE_ID
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.Set registeredListeners
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String LED_COLOR_ALPHA
androidx.window.layout.DisplayCompatHelperApi17: androidx.window.layout.DisplayCompatHelperApi17 INSTANCE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHANNEL_NAME
com.google.android.gms.common.internal.GetServiceRequest: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.Boolean important
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation VERTICAL
kotlin.jvm.internal.CallableReference: java.lang.String name
com.google.android.gms.internal.measurement.zzft: java.lang.String zzf
com.google.android.gms.signin.internal.zak: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String description
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: androidx.core.util.Consumer $consumer$inlined
androidx.window.R$styleable: int SplitPairRule_splitMinSmallestWidth
com.google.android.gms.common.internal.zzj: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String TITLE_COLOR_ALPHA
com.google.android.gms.internal.measurement.zzft: int zzi
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer audioAttributesUsage
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval Hourly
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
androidx.window.embedding.EmbeddingCompat: boolean DEBUG
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$Companion Companion
com.google.android.gms.internal.measurement.zzfr: com.google.android.gms.internal.measurement.zzfr zza
com.google.android.gms.common.api.Scope: android.os.Parcelable$Creator CREATOR
android.support.v4.media.session.PlaybackStateCompat: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzff: int zzd
com.google.android.gms.internal.measurement.zzfz: com.google.android.gms.internal.measurement.zzfn zzg
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean onlyAlertOnce
com.google.android.gms.internal.measurement.zzfz: int zzd
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String IMPORTANCE
org.chromium.support_lib_boundary.ProcessGlobalConfigConstants: java.lang.String CACHE_DIRECTORY_BASE_PATH
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String BOT
androidx.window.layout.EmptyDecorator: androidx.window.layout.EmptyDecorator INSTANCE
androidx.window.R$attr: int finishPrimaryWithSecondary
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource FlutterBitmapAsset
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior: int FORCE_DARK_ONLY
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SOUND_SOURCE
com.google.android.gms.internal.measurement.zzei: boolean zzh
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted
androidx.window.layout.FoldingFeature$State: java.lang.String description
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction channelAction
com.google.android.gms.internal.measurement.zzer: com.google.android.gms.internal.measurement.zzer zza
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String TITLE_COLOR_BLUE
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: androidx.core.util.Consumer $consumer
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: com.dexterous.flutterlocalnotifications.models.BitmapSource bigPictureBitmapSource
com.google.android.gms.internal.measurement.zzfh: com.google.android.gms.internal.measurement.zzfh zza
com.google.android.gms.internal.measurement.zzfr: long zzf
com.google.android.gms.internal.measurement.zzft: long zzg
com.google.android.gms.internal.measurement.zzff: java.lang.String zzr
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzgd zzd
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PROGRESS
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean animating
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_ACTIVE_NOTIFICATIONS_ERROR_MESSAGE
com.google.android.gms.internal.measurement.zzei: com.google.android.gms.internal.measurement.zzli zzg
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Long millisecondsSinceEpoch
com.google.android.gms.internal.measurement.zzgd: int zzf
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_OFF_MS
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.List lastValue
androidx.window.layout.WindowMetrics: androidx.window.core.Bounds _bounds
com.google.android.gms.internal.measurement.zzfx: double zzi
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
androidx.window.layout.WindowMetricsCalculatorCompat: java.lang.String TAG
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map listenerToActivity
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_LARGE_ICON_ERROR_CODE
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.dart.PlatformMessageHandler platformMessageHandler
com.google.android.gms.internal.measurement.zzfx: java.lang.String zzf
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.sidecar.SidecarInterface$SidecarCallback callbackInterface
com.google.android.gms.internal.measurement.zzfz: com.google.android.gms.internal.measurement.zzfz zza
androidx.window.embedding.ActivityFilter: java.lang.String intentAction
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
com.google.android.gms.internal.measurement.zzgd: long zzm
com.google.android.gms.internal.measurement.zzfx: int zzd
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String MILLISECONDS_SINCE_EPOCH
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzaa
com.google.android.gms.internal.measurement.zzek: boolean zzk
io.flutter.plugin.platform.SingleViewPresentation: android.widget.FrameLayout container
com.dexterous.flutterlocalnotifications.models.BitmapSource: com.dexterous.flutterlocalnotifications.models.BitmapSource DrawableResource
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer progress
com.google.android.gms.internal.measurement.zzfx: long zzg
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Listener listeners
io.flutter.view.AccessibilityViewEmbedder: java.lang.String TAG
com.google.android.gms.internal.measurement.zzek: com.google.android.gms.internal.measurement.zzli zzg
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzP
com.google.android.gms.internal.measurement.zzfb: com.google.android.gms.internal.measurement.zzli zzf
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String LED_COLOR_GREEN
androidx.window.embedding.SplitRule$Api30Impl: androidx.window.embedding.SplitRule$Api30Impl INSTANCE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String COLOR_BLUE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LINES
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
com.google.android.gms.internal.measurement.zzgm: java.lang.String zzg
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Boolean enableLights
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PLATFORM_SPECIFICS
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SHOW_WEEKLY_AT_DAY_AND_TIME_METHOD
com.google.android.gms.internal.measurement.zzgm: int zzd
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval[] $VALUES
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.util.ArrayList lines
com.google.android.gms.internal.measurement.zzei: int zze
com.google.android.gms.internal.measurement.zzfp: com.google.android.gms.internal.measurement.zzfp zza
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String DESCRIPTION
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
com.google.android.gms.internal.measurement.zzfn: java.lang.String zzg
com.google.android.gms.internal.measurement.zzgt: com.google.android.gms.internal.measurement.zzgt zza
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.Boolean htmlFormatContentTitle
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SHORTCUT_ID
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String LED_COLOR_BLUE
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SHARED_PREFERENCES_KEY
com.google.android.gms.internal.measurement.zzgd: int zzQ
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzL
com.google.android.gms.internal.measurement.zzet: int zzd
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List mutators
io.flutter.embedding.engine.FlutterJNI: java.util.Set flutterUiDisplayListeners
com.google.android.gms.internal.measurement.zzfn: com.google.android.gms.internal.measurement.zzfn zza
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String DATA_MIME_TYPE
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SHOW_DAILY_AT_TIME_METHOD
com.google.android.gms.internal.measurement.zzgr: com.google.android.gms.internal.measurement.zzli zzf
androidx.window.R$attr: int splitMinSmallestWidth
io.flutter.view.AccessibilityViewEmbedder: java.util.Map originToFlutterId
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean autoCancel
com.google.android.gms.internal.measurement.zzky: com.google.android.gms.internal.measurement.zzks zza
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity activity
kotlin.jvm.internal.CallableReference: java.lang.Object NO_RECEIVER
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: androidx.window.layout.WindowLayoutInfo lastKnownValue
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzO
com.google.android.gms.internal.measurement.zzey: int zze
com.google.android.gms.internal.measurement.zzgd: long zzw
com.google.firebase.datatransport.TransportRegistrar: java.lang.String LIBRARY_NAME
com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation: java.lang.Boolean htmlFormatTitle
com.google.android.gms.common.internal.zav: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String BIG_PICTURE
com.google.android.gms.internal.measurement.zzfb: boolean zzg
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CANCEL_METHOD
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzr
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String STYLE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHANNEL_ACTION
androidx.window.layout.SidecarCompat: java.util.Map windowListenerRegisteredContexts
com.google.android.gms.internal.measurement.zzet: java.lang.String zzf
androidx.window.R$styleable: int[] SplitPlaceholderRule
com.google.android.gms.internal.measurement.zzey: int zzd
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.Boolean allowGeneratedReplies
io.flutter.embedding.engine.FlutterJNI: boolean initCalled
com.google.android.gms.internal.measurement.zzfr: int zze
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String SOUND_SOURCE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String URI
com.google.android.gms.internal.measurement.zzgm: float zzi
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_SUMMARY_TEXT
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$WebAuthnSupport: int APP
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: androidx.window.layout.WindowInfoTrackerImpl this$0
com.google.android.gms.internal.measurement.zzgy: com.google.android.gms.internal.measurement.zzli zzf
io.flutter.view.AccessibilityViewEmbedder: android.view.View rootAccessibilityView
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.String uri
com.google.android.gms.internal.measurement.zzgd: boolean zzab
com.google.android.gms.internal.measurement.zzfd: com.google.android.gms.internal.measurement.zzfd zza
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Object onCloseHandler
androidx.window.R$styleable: int SplitPairRule_splitMinWidth
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PERSON
com.dexterous.flutterlocalnotifications.models.MessageDetails: java.lang.String dataUri
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: androidx.concurrent.futures.AbstractResolvableFuture$Waiter next
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String GROUP_ID
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String IMPORTANCE
com.google.android.gms.common.internal.zat: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfx: com.google.android.gms.internal.measurement.zzli zzj
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.NotificationStyle style
com.google.android.gms.internal.measurement.zzgd: long zzj
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency[] $VALUES
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState state
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ADDITIONAL_FLAGS
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String DELETE_NOTIFICATION_CHANNEL_METHOD
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String COLOR_RED
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval Daily
androidx.window.embedding.MatcherUtils: boolean sDebugMatchers
androidx.window.embedding.ActivityRule: java.util.Set filters
androidx.window.core.Version: int major
androidx.window.layout.SidecarCompat$DistinctElementCallback: java.util.concurrent.locks.ReentrantLock lock
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$ImeVisibleListener imeVisibleListener
com.google.android.gms.internal.measurement.zzfj: java.lang.String zze
com.google.android.gms.internal.measurement.zzgk: com.google.android.gms.internal.measurement.zzlh zzf
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer priority
com.google.android.gms.internal.measurement.zzgp: com.google.android.gms.internal.measurement.zzgp zza
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CANCEL_NOTIFICATION
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetricsCalculatorCompat INSTANCE
com.google.android.gms.internal.measurement.zzet: com.google.android.gms.internal.measurement.zzet zza
com.google.android.gms.internal.measurement.zzek: boolean zzl
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType$Companion Companion
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.BitmapSource largeIconBitmapSource
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HIDE_EXPANDED_LARGE_ICON
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ALLOW_WHILE_IDLE
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String NOTIFICATION_DETAILS
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.lang.String typeFieldName
com.google.android.gms.cloudmessaging.CloudMessage: android.os.Parcelable$Creator CREATOR
android.support.v4.media.session.MediaSessionCompat$QueueItem: android.os.Parcelable$Creator CREATOR
androidx.window.R$styleable: int[] ActivityFilter
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map activityToListeners
org.chromium.support_lib_boundary.ProcessGlobalConfigConstants: java.lang.String DATA_DIRECTORY_BASE_PATH
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String groupKey
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: android.app.Activity $activity
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: java.lang.Thread thread
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Boolean enableVibration
com.google.android.gms.internal.measurement.zzgk: int zze
com.google.android.gms.signin.internal.zaa: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency Daily
androidx.window.R$styleable: int SplitPairFilter_secondaryActivityAction
androidx.window.R$attr: int placeholderActivityName
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SHOW_WHEN
io.flutter.view.AccessibilityViewEmbedder: java.util.Map embeddedViewToDisplayBounds
com.google.android.gms.internal.measurement.zzgk: int zzd
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: androidx.window.layout.SidecarWindowBackend this$0
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency scheduledNotificationRepeatFrequency
com.google.android.gms.common.ConnectionResult: android.os.Parcelable$Creator CREATOR
com.google.android.gms.signin.internal.zai: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer maxProgress
kotlinx.coroutines.JobSupport: java.lang.Object _state
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String name
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String id
androidx.window.layout.FoldingFeature$Orientation: java.lang.String description
kotlinx.coroutines.CancellableContinuationImpl: int _decision
com.google.android.gms.internal.measurement.zzgt: int zzd
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents DateAndTime
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzv
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_COLOR_RED
com.google.android.gms.internal.measurement.zzfb: int zzd
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController$Companion Companion
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo lastInfo
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_ACTIVE_NOTIFICATIONS_METHOD
com.google.android.gms.internal.measurement.zzgd: long zzN
com.google.android.gms.internal.measurement.zzlb: int zzd
com.google.android.gms.internal.measurement.zzey: boolean zzg
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String INPUTS
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SELECT_NOTIFICATION
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type$Companion Companion
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$2
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.String contentTitle
androidx.window.layout.SidecarCompat$FirstAttachAdapter: java.lang.ref.WeakReference activityWeakReference
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean channelShowBadge
com.google.android.gms.measurement.internal.zzq: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CANCEL_TAG
io.flutter.plugin.platform.SingleViewPresentation: android.content.Context outerContext
com.google.android.gms.internal.measurement.zzfj: int zzd
com.dexterous.flutterlocalnotifications.models.NotificationAction: com.dexterous.flutterlocalnotifications.models.IconSource iconSource
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String SOUND
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String PERMISSION_REQUEST_IN_PROGRESS_ERROR_MESSAGE
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext _context
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTriggerTimeout
com.google.android.gms.internal.measurement.zzfx: java.lang.String zze
com.google.android.gms.auth.api.signin.GoogleSignInAccount: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
com.google.android.gms.internal.measurement.zzgy: double zzj
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_CONTENT
com.google.android.gms.internal.measurement.zzlb: java.util.Map zza
com.google.android.gms.internal.measurement.zzfp: com.google.android.gms.internal.measurement.zzgi zzg
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String GROUP_KEY
io.flutter.embedding.engine.FlutterJNI: java.lang.String vmServiceUri
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTriggeredTimestamp
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.Boolean htmlFormatContentTitle
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List lastInfo
com.google.android.gms.internal.measurement.zzfd: boolean zzg
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.Integer titleColor
androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingAdapter adapter
com.google.android.gms.common.internal.TelemetryData: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.SplitController: java.util.Set staticSplitRules
com.google.android.gms.internal.measurement.zzff: java.lang.String zzk
com.dexterous.flutterlocalnotifications.models.PersonDetails: com.dexterous.flutterlocalnotifications.models.IconSource iconBitmapSource
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack secondaryActivityStack
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String NOTIFICATION_ID
androidx.window.layout.ActivityCompatHelperApi30: androidx.window.layout.ActivityCompatHelperApi30 INSTANCE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean showProgress
com.google.android.gms.internal.measurement.zzjk: int zzb
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String id
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ID
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction CreateIfNotExists
androidx.window.core.Version: androidx.window.core.Version$Companion Companion
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: androidx.window.embedding.ExtensionEmbeddingBackend this$0
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String CONTEXTUAL
com.google.android.gms.measurement.internal.zzlk: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzff: java.lang.String zzf
com.google.android.gms.internal.measurement.zzfn: java.lang.String zzi
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TIME_ZONE_NAME
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LARGE_ICON
com.google.android.gms.internal.measurement.zzfp: int zze
com.google.android.gms.internal.measurement.zzek: int zzd
androidx.window.R$attr: int secondaryActivityName
com.google.android.gms.internal.measurement.zzff: int zzg
com.google.android.gms.internal.measurement.zzff: com.google.android.gms.internal.measurement.zzli zzi
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.lang.String contentTitle
io.flutter.embedding.engine.FlutterJNI: java.util.Set engineLifecycleListeners
androidx.window.R$styleable: int SplitPlaceholderRule_splitLayoutDirection
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Integer importance
androidx.window.embedding.EmbeddingTranslatingCallback: androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface callback
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowBackend windowBackend
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: androidx.window.layout.WindowInfoTracker tracker
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate accessibilityDelegate
com.google.android.gms.internal.measurement.zzgy: java.lang.String zzg
com.google.android.gms.internal.measurement.zzfn: java.lang.String zzf
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarCompat$Companion Companion
androidx.window.embedding.MatcherUtils: java.lang.String sMatchersTag
kotlin.jvm.internal.Lambda: int arity
com.google.android.gms.internal.measurement.zzfn: java.lang.String zzk
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String STOP_FOREGROUND_SERVICE
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String DISPATCHER_HANDLE
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: com.dexterous.flutterlocalnotifications.PermissionRequestListener callback
androidx.window.core.Version: androidx.window.core.Version VERSION_0_1
kotlinx.coroutines.InvokeOnCancelling: int _invoked
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList windowLayoutChangeCallbacks
androidx.window.R$attr: int activityAction
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.ExtensionsWindowLayoutInfoAdapter INSTANCE
androidx.window.core.Version$bigInteger$2: androidx.window.core.Version this$0
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.String summaryText
com.google.android.gms.common.internal.MethodInvocation: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ICON_SOURCE
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String NAME
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHRONOMETER_COUNT_DOWN
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_TITLE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer ledOnMs
com.google.android.gms.internal.measurement.zzgp: com.google.android.gms.internal.measurement.zzli zzd
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String NOTIFICATION_LAUNCHED_APP
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource BitmapFilePath
com.google.android.gms.internal.measurement.zzgt: com.google.android.gms.internal.measurement.zzli zze
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation: java.lang.Boolean groupConversation
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.util.List actions
androidx.window.layout.SidecarWindowBackend: boolean DEBUG
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: java.lang.ClassLoader sClassLoader
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mName
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.RepeatInterval repeatInterval
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.api.Status: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ICON
androidx.window.R$styleable: int SplitPairRule_splitRatio
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.String key
com.google.android.gms.internal.measurement.zzem: com.google.android.gms.internal.measurement.zzer zzf
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ENABLE_LIGHTS
androidx.window.embedding.SplitInfo: float splitRatio
androidx.window.layout.DisplayCompatHelperApi28: androidx.window.layout.DisplayCompatHelperApi28 INSTANCE
androidx.window.core.Version: java.lang.String description
com.google.android.gms.internal.measurement.zzem: boolean zzg
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TAG
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String ARE_NOTIFICATIONS_ENABLED_METHOD
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String TITLE
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String ACTION_ID
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: androidx.window.layout.SidecarCompat this$0
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.Object icon
kotlin.jvm.internal.CallableReference: java.lang.Object receiver
androidx.window.R$styleable: int SplitPairRule_finishPrimaryWithSecondary
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
com.google.android.gms.internal.measurement.zzfb: com.google.android.gms.internal.measurement.zzfb zza
com.dexterous.flutterlocalnotifications.models.BitmapSource: com.dexterous.flutterlocalnotifications.models.BitmapSource ByteArray
kotlinx.coroutines.EventLoopImplBase$DelayedTask: java.lang.Object _heap
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzo
androidx.window.layout.SidecarCompat: java.util.Map componentCallbackMap
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.Boolean htmlFormatBigText
com.google.android.gms.common.zzq: android.os.Parcelable$Creator CREATOR
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTriggeredEventName
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: int MODULE_VERSION
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String title
androidx.window.embedding.MatcherUtils: androidx.window.embedding.MatcherUtils INSTANCE
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface surface
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend globalInstance
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_NOTIFICATION_CHANNELS_METHOD
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean setAsGroupSummary
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mOrigin
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String AUDIO_ATTRIBUTES_USAGE
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTriggerEventName
androidx.window.embedding.SplitPlaceholderRule: android.content.Intent placeholderIntent
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzfz zzac
com.dexterous.flutterlocalnotifications.models.SoundSource: com.dexterous.flutterlocalnotifications.models.SoundSource Uri
androidx.window.core.Version: int patch
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: java.util.Map registeredPlugins
io.flutter.embedding.engine.FlutterOverlaySurface: int id
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SOUND
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$1
com.google.android.gms.internal.measurement.zzet: com.google.android.gms.internal.measurement.zzem zzg
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction channelAction
com.google.android.gms.internal.measurement.zzfd: boolean zzf
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: android.app.Activity activity
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Long when
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String TITLE_COLOR_GREEN
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CATEGORY
com.google.android.gms.common.zzo: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.Time repeatTime
com.google.android.gms.internal.measurement.zzfj: java.lang.String zzf
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.util.Map labelToSubtype
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
kotlinx.coroutines.internal.ResizableAtomicArray: java.util.concurrent.atomic.AtomicReferenceArray array
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents Time
androidx.window.R$styleable: int ActivityFilter_activityAction
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String LED_COLOR_RED
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String groupId
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzli zzG
com.google.android.gms.internal.measurement.zzek: com.google.android.gms.internal.measurement.zzek zza
androidx.window.R$id: int ltr
com.google.android.gms.internal.measurement.zzfd: java.lang.String zze
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.SoundSource soundSource
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int deferredInsetTypes
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SHOW_METHOD
androidx.window.embedding.SplitPairRule: boolean finishPrimaryWithSecondary
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean showWhen
com.google.android.gms.internal.measurement.zzem: com.google.android.gms.internal.measurement.zzey zze
com.google.android.gms.internal.measurement.zzgd: int zzs
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer number
androidx.window.embedding.SplitPairFilter: java.lang.String secondaryActivityIntentAction
androidx.window.R$styleable: int ActivityRule_alwaysExpand
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String UNSUPPORTED_OS_VERSION_ERROR_CODE
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer callback
com.google.android.gms.internal.measurement.zzfp: int zzd
com.google.android.gms.internal.measurement.zzem: com.google.android.gms.internal.measurement.zzem zza
com.google.android.gms.internal.measurement.zzek: boolean zzj
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CALLED_AT
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.util.Map subtypeToLabel
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$WebAuthnSupport: int NONE
com.google.android.gms.internal.measurement.zzey: java.lang.String zzf
androidx.window.core.Version: androidx.window.core.Version UNKNOWN
com.google.android.gms.internal.measurement.zzer: java.lang.String zzg
androidx.window.layout.HardwareFoldingFeature: androidx.window.core.Bounds featureBounds
com.google.android.gms.internal.measurement.zzgd: int zza
com.dexterous.flutterlocalnotifications.models.MessageDetails: java.lang.String text
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String TITLE_COLOR_RED
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: int NOTIFICATION_PERMISSION_REQUEST_CODE
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.lang.Boolean htmlFormatSummaryText
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzA
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_COLOR_ALPHA
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TIMEOUT_AFTER
io.flutter.embedding.engine.FlutterJNI: boolean loadLibraryCalled
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String FULL_SCREEN_INTENT
androidx.window.core.Version: int minor
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl splitInfoEmbeddingCallback
androidx.window.embedding.ActivityStack: boolean isEmpty
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.lang.Boolean htmlFormatLines
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String GROUP_CONVERSATION
com.google.android.gms.internal.measurement.zzgm: com.google.android.gms.internal.measurement.zzgm zza
androidx.window.layout.WindowInfoTracker$Companion: java.lang.String TAG
com.google.android.gms.internal.measurement.zzgd: int zzg
com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_SOUND_ERROR_CODE
androidx.window.R$styleable: int SplitPairRule_splitLayoutDirection
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType NONE
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String ZONED_SCHEDULE_METHOD
androidx.window.R$attr: int primaryActivityName
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation: java.util.ArrayList messages
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHANNEL_ID
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzW
com.dexterous.flutterlocalnotifications.models.NotificationDetails: int[] additionalFlags
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String REQUEST_PERMISSION_METHOD
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle Messaging
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat embeddingExtension
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
com.google.android.gms.internal.measurement.zzgd: int zze
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SELECT_FOREGROUND_NOTIFICATION_ACTION
com.google.android.gms.internal.measurement.zzem: java.lang.String zzh
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout rootView
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation HORIZONTAL
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: com.dexterous.flutterlocalnotifications.models.SoundSource soundSource
com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.internal.zas mResultGuardian
com.google.android.gms.internal.measurement.zzft: com.google.android.gms.internal.measurement.zzft zza
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
androidx.window.embedding.SplitController: androidx.window.embedding.EmbeddingBackend embeddingBackend
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean needsSave
androidx.window.embedding.EmbeddingTranslatingCallback: androidx.window.embedding.EmbeddingAdapter adapter
androidx.window.embedding.SplitPairRule: boolean clearTop
androidx.window.core.Bounds: int right
androidx.window.layout.WindowMetricsCalculator$Companion: kotlin.jvm.functions.Function1 decorator
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String previousCompletedSplashIsolate
com.google.android.gms.common.internal.RootTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgy: java.lang.String zzh
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INITIALIZE_METHOD
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_COLOR_GREEN
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CANCEL_ALL_METHOD
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer day
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTrackerDecorator decorator
com.google.android.gms.internal.measurement.zzem: int zzd
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList splitChangeCallbacks
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mTimedOutEventParams
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_LED_DETAILS_ERROR_MESSAGE
com.google.android.gms.measurement.internal.zzac: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.DateTimeComponents matchDateTimeComponents
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle BigPicture
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior: int PREFER_MEDIA_QUERY_OVER_FORCE_DARK
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzgg zzS
com.google.firebase.messaging.RemoteMessage: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzli zzh
android.support.v4.media.MediaMetadataCompat: android.os.Parcelable$Creator CREATOR
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: java.util.concurrent.Executor executor
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.lang.String summaryText
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State HALF_OPENED
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: android.app.Activity activity
io.flutter.plugins.GeneratedPluginRegistrant: java.lang.String TAG
androidx.window.layout.ExtensionWindowLayoutInfoBackend: androidx.window.extensions.layout.WindowLayoutComponent component
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.Boolean showsUserInterface
com.dexterous.flutterlocalnotifications.models.MessageDetails: com.dexterous.flutterlocalnotifications.models.PersonDetails person
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SUB_TEXT
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend globalInstance
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Companion Companion
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Waiter waiters
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String body
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ONLY_ALERT_ONCE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Long timeoutAfter
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SCHEDULE_METHOD
com.google.android.gms.internal.measurement.zzfn: int zzd
android.support.v4.media.session.MediaSessionCompat$Token: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CALLBACK_HANDLE
com.google.android.gms.internal.measurement.zzcl: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzet: boolean zzi
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzt
androidx.window.core.Version: androidx.window.core.Version CURRENT
androidx.window.layout.SidecarAdapter: androidx.window.layout.SidecarAdapter$Companion Companion
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: kotlinx.coroutines.flow.Flow $flow
androidx.window.embedding.SplitPairRule: java.util.Set filters
kotlin.jvm.internal.CallableReference: java.lang.Class owner
androidx.window.layout.SidecarCompat: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface extensionCallback
androidx.window.embedding.SplitPairRule: boolean finishSecondaryWithPrimary
com.google.android.gms.internal.measurement.zzgd: long zzV
androidx.window.R$styleable: int SplitPlaceholderRule_placeholderActivityName
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State FLAT
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: java.util.concurrent.locks.ReentrantLock lock
com.google.android.gms.internal.measurement.zzgm: double zzj
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean released
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String tag
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String DRAWABLE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Long calledAt
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
com.google.android.gms.internal.measurement.zzft: long zzh
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String ICON_SOURCE
androidx.window.R$attr: int clearTop
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackLibraryPath
android.support.v4.media.session.ParcelableVolumeInfo: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer callback
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_CALLBACK_HANDLE_METHOD
android.support.v4.media.MediaBrowserCompat$MediaItem: android.os.Parcelable$Creator CREATOR
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarAdapter sidecarAdapter
com.google.android.gms.internal.measurement.zzek: com.google.android.gms.internal.measurement.zzer zzi
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String icon
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String GROUP_ALERT_BEHAVIOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TITLE
androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock globalLock
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController globalInstance
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Boolean showBadge
com.google.android.gms.cloudmessaging.zzd: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack primaryActivityStack
com.google.android.gms.internal.measurement.zzgd: com.google.android.gms.internal.measurement.zzlg zzT
androidx.window.layout.WindowLayoutInfo: java.util.List displayFeatures
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface$WebMessagePayloadType: int TYPE_ARRAY_BUFFER
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: com.google.gson.Gson gson
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock globalLock
com.google.android.gms.internal.measurement.zzgd: long zzB
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.Object mValue
com.dexterous.flutterlocalnotifications.models.Time: java.lang.String MINUTE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String REPEAT_TIME
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String ENABLE_LIGHTS
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable reflected
io.flutter.plugin.platform.SingleViewPresentation: boolean startFocused
com.google.android.gms.internal.measurement.zzff: com.google.android.gms.internal.measurement.zzli zzh
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String MAX_PROGRESS
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String STYLE_INFORMATION
com.google.android.gms.measurement.internal.zzas: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation: java.lang.Boolean htmlFormatBody
com.google.android.gms.internal.measurement.zzff: com.google.android.gms.internal.measurement.zzli zzn
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String COLOR_GREEN
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ticker
com.google.android.gms.internal.measurement.zzgd: boolean zzZ
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ACTIONS
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
com.google.android.gms.internal.measurement.zzgm: long zze
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1 INSTANCE
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat windowExtension
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CONTENT_TITLE
androidx.window.R$styleable: int SplitPlaceholderRule_splitMinSmallestWidth
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String VIBRATION_PATTERN
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mExpiredEventName
androidx.window.R$attr: int activityName
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle Default
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String IMPORTANT
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String title
com.dexterous.flutterlocalnotifications.models.SoundSource: com.dexterous.flutterlocalnotifications.models.SoundSource RawResource
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer groupAlertBehavior
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String ID
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PRIORITY
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String DESCRIPTION
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_BIG_TEXT
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String id
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior: int MEDIA_QUERY_ONLY
androidx.window.embedding.SplitPlaceholderRule: java.util.Set filters
io.flutter.embedding.engine.FlutterJNI: float displayWidth
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.Boolean htmlFormatSummaryText
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.Object bigPicture
androidx.window.R$styleable: int SplitPairFilter_secondaryActivityName
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowMetricsCalculator windowMetricsCalculator
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzE
com.google.android.gms.internal.measurement.zzff: boolean zzl
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String CHANNEL_ACTION
com.google.android.gms.internal.measurement.zzgt: com.google.android.gms.internal.measurement.zzgp zzf
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String description
com.google.android.gms.internal.measurement.zzgi: com.google.android.gms.internal.measurement.zzli zzf
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String DEFAULT_ICON
androidx.window.R$attr: int splitMinWidth
com.google.android.gms.internal.measurement.zzer: int zze
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LARGE_ICON_BITMAP_SOURCE
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents DayOfWeekAndTime
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer id
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.String bigText
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.Boolean contextual
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String NUMBER
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SUMMARY_TEXT
androidx.window.core.Version: java.lang.String VERSION_PATTERN_STRING
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: java.util.WeakHashMap mActivityWindowLayoutInfo
com.google.android.gms.internal.measurement.zzet: int zze
io.flutter.embedding.engine.FlutterJNI: boolean prefetchDefaultFontManagerCalled
com.google.android.gms.internal.measurement.zzff: com.google.android.gms.internal.measurement.zzff zza
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: android.app.Activity $activity
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
kotlinx.coroutines.DefaultExecutor: int debugStatus
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String channelDescription
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean usesChronometer
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.Boolean bot
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_ACTIVE_NOTIFICATION_MESSAGING_STYLE_METHOD
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowInfoTrackerImpl$Companion Companion
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: io.flutter.plugin.common.MethodChannel channel
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzH
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String BIG_PICTURE_BITMAP_SOURCE
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.String name
com.google.android.gms.internal.measurement.zzfn: java.lang.String zzj
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CREATE_NOTIFICATION_CHANNEL_METHOD
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.Boolean cancelNotification
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SCHEDULED_NOTIFICATIONS
com.google.android.gms.internal.measurement.zzfr: int zzd
com.google.android.gms.internal.measurement.zzei: com.google.android.gms.internal.measurement.zzei zza
com.google.android.gms.internal.measurement.zzgy: com.google.android.gms.internal.measurement.zzgy zza
androidx.window.R$attr: int splitLayoutDirection
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String START_FOREGROUND_SERVICE
com.google.android.gms.internal.measurement.zzgg: com.google.android.gms.internal.measurement.zzli zzf
com.dexterous.flutterlocalnotifications.models.BitmapSource: com.dexterous.flutterlocalnotifications.models.BitmapSource FilePath
com.google.android.gms.internal.measurement.zzfx: float zzh
com.dexterous.flutterlocalnotifications.models.BitmapSource: com.dexterous.flutterlocalnotifications.models.BitmapSource[] $VALUES
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.Boolean htmlFormatSummaryText
android.support.v4.media.session.PlaybackStateCompat$CustomAction: android.os.Parcelable$Creator CREATOR
androidx.window.R$id: int rtl
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ONGOING
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction[] $VALUES
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_DRAWABLE_RESOURCE_ERROR_MESSAGE
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation$Companion Companion
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String timeZoneName
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mAppId
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String sound
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String NAME
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource ByteArray
io.flutter.embedding.engine.FlutterJNI: java.util.concurrent.locks.ReentrantReadWriteLock shellHolderLock
androidx.window.embedding.SplitRule: int layoutDirection
com.google.android.gms.internal.measurement.zzfd: int zzh
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_LED_DETAILS_ERROR_CODE
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.Object largeIcon
io.flutter.embedding.engine.FlutterJNI: java.lang.Long nativeShellHolderId
com.google.android.gms.internal.measurement.zzfb: java.lang.String zze
io.flutter.embedding.engine.FlutterJNI: float displayHeight
com.google.android.gms.internal.measurement.zzgi: com.google.android.gms.internal.measurement.zzlh zze
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State state
com.google.android.gms.internal.measurement.zzgd: int zzI
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String PERIODICALLY_SHOW_METHOD
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean chronometerCountDown
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean enableVibration
com.dexterous.flutterlocalnotifications.models.Time: java.lang.Integer hour
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.String contentTitle
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: java.util.concurrent.locks.ReentrantLock lock
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String MESSAGES
com.google.android.gms.internal.measurement.zzei: com.google.android.gms.internal.measurement.zzli zzf
com.dexterous.flutterlocalnotifications.models.Time: java.lang.String SECOND
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.concurrent.Executor executor
androidx.window.R$styleable: int SplitPlaceholderRule_splitRatio
androidx.window.embedding.ActivityRule: boolean alwaysExpand
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String KEY
com.google.android.gms.internal.measurement.zzek: java.lang.String zzf
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzp
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle lifecycle
com.google.android.gms.internal.measurement.zzgb: com.google.android.gms.internal.measurement.zzgb zza
androidx.window.core.Version: androidx.window.core.Version VERSION_1_0
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer ledOffMs
androidx.window.layout.WindowInfoTrackerImpl: int BUFFER_CAPACITY
io.flutter.embedding.engine.FlutterJNI: android.os.Looper mainLooper
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CONVERSATION_TITLE
com.google.android.gms.internal.measurement.zzfp: boolean zzh
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String ENABLE_VIBRATION
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean fullScreenIntent
androidx.window.layout.SidecarCompat$DistinctElementCallback: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface callbackInterface
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String AUDIO_ATTRIBUTES_USAGE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer visibility
com.google.android.gms.internal.measurement.zzfj: com.google.android.gms.internal.measurement.zzfj zza
io.flutter.view.AccessibilityViewEmbedder: int nextFlutterId
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Boolean playSound
com.google.android.gms.internal.measurement.zzgy: int zze
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener insetsListener
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String DELETE_NOTIFICATION_CHANNEL_GROUP_METHOD
androidx.window.layout.SidecarCompat: androidx.window.sidecar.SidecarInterface sidecar
com.dexterous.flutterlocalnotifications.models.MessageDetails: java.lang.String dataMimeType
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTimedOutEventName
com.google.android.gms.internal.measurement.zzgm: java.lang.String zzf
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.app.Activity mainActivity
com.google.android.gms.internal.measurement.zzfn: java.lang.String zze
androidx.window.R$id: int androidx_window_activity_scope
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle splashScreenState
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String ID
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHANNEL_DESCRIPTION
androidx.window.R$styleable: int[] SplitPairFilter
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle Media
com.google.android.gms.internal.measurement.zzfh: java.lang.String zze
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzD
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TIMESTAMP
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_RAW_RESOURCE_ERROR_MESSAGE
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_ICON_ERROR_CODE
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetricsCalculator$Companion Companion
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean indeterminate
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets lastWindowInsets
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$0
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation: java.lang.String conversationTitle
com.google.android.gms.internal.measurement.zzei: boolean zzi
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PAYLOAD
com.google.android.gms.internal.measurement.zzfv: int zzd
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle BigText
kotlin.coroutines.jvm.internal.SuspendLambda: int arity
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ENABLE_VIBRATION
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzR
androidx.window.layout.SidecarCompat$FirstAttachAdapter: androidx.window.layout.SidecarCompat sidecarCompat
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_ON_MS
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$WebAuthnSupport: int BROWSER
com.google.android.gms.internal.measurement.zzfz: java.lang.String zzf
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String VISIBILITY
com.google.android.gms.internal.measurement.zzff: java.lang.String zzp
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String METHOD_CHANNEL
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SCHEDULED_NOTIFICATION_REPEAT_FREQUENCY
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource DrawableResource
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String BODY
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock globalLock
androidx.window.R$attr: int finishSecondaryWithPrimary
androidx.window.R$id: int locale
org.chromium.support_lib_boundary.ProcessGlobalConfigConstants: java.lang.String DATA_DIRECTORY_SUFFIX
androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingCompat$Companion Companion
androidx.window.layout.WindowInfoTracker$Companion: boolean DEBUG
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer color
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: int label
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String DATA_URI
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_NOTIFICATION_CHANNELS_ERROR_CODE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TEXT
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture
com.google.android.gms.internal.measurement.zzgd: long zzM
androidx.window.embedding.SplitPairFilter: android.content.ComponentName primaryActivityName
com.google.android.gms.internal.measurement.zzgd: long zzU
androidx.window.layout.ActivityCompatHelperApi24: androidx.window.layout.ActivityCompatHelperApi24 INSTANCE
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INPUT
com.google.android.gms.internal.measurement.zzgg: int zze
com.google.android.gms.internal.measurement.zzgr: int zzd
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CANCEL_ID
com.google.android.gms.internal.measurement.zzgy: boolean zzi
com.google.android.gms.internal.measurement.zzfh: int zzd
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String BIG_TEXT
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
com.google.firebase.installations.FirebaseInstallationsRegistrar: java.lang.String LIBRARY_NAME
com.google.android.gms.internal.measurement.zzfn: java.lang.String zzh
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String AUTO_CANCEL
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzy
com.google.android.gms.internal.measurement.zzgr: java.lang.String zze
com.google.android.gms.internal.measurement.zzet: boolean zzj
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mExpiredEventParams
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String ICON
androidx.window.R$styleable: int ActivityFilter_activityName
androidx.window.R$attr: int secondaryActivityAction
androidx.window.layout.SidecarAdapter: java.lang.String TAG
androidx.window.R$attr: int alwaysExpand
com.dexterous.flutterlocalnotifications.models.Time: java.lang.String HOUR
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.lang.Class baseType
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackName
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TICKER
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents[] $VALUES
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.String summaryText
androidx.window.layout.SidecarCompat$DistinctElementCallback: java.util.WeakHashMap activityWindowLayoutInfo
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SCHEDULED_DATE_TIME
com.google.android.gms.internal.measurement.zzff: java.lang.String zzo
androidx.window.embedding.ActivityFilter: android.content.ComponentName componentName
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_BIG_PICTURE_ERROR_CODE
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type HINGE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.styles.StyleInformation styleInformation
androidx.window.R$styleable: int SplitPairRule_clearTop
androidx.window.embedding.EmbeddingCompat: androidx.window.extensions.embedding.ActivityEmbeddingComponent embeddingExtension
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String SHOWS_USER_INTERFACE
androidx.window.core.Bounds: int left
androidx.window.R$styleable: int[] SplitPairRule
com.google.android.gms.internal.measurement.zzfx: com.google.android.gms.internal.measurement.zzfx zza
com.google.android.gms.internal.measurement.zzfp: com.google.android.gms.internal.measurement.zzgi zzf
androidx.window.R$attr: int splitRatio
com.google.android.gms.signin.internal.zag: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.ActivityStack: java.util.List activities
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation completion
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer ledColor
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzu
androidx.window.embedding.SplitPairFilter: android.content.ComponentName secondaryActivityName
androidx.window.layout.SidecarCompat$TranslatingCallback: androidx.window.layout.SidecarCompat this$0
com.google.android.gms.internal.measurement.zzet: boolean zzh
com.google.android.gms.internal.measurement.zzgy: int zzd
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String sound
com.google.android.gms.internal.measurement.zzgd: long zzl
com.google.android.gms.internal.measurement.zzfd: int zzd
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzq
androidx.concurrent.futures.AbstractResolvableFuture: java.lang.Object value
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.concurrent.locks.ReentrantLock multicastConsumerLock
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix finalMatrix
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend$Companion Companion
com.google.android.gms.internal.measurement.zzfv: long zzf
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource[] $VALUES
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle[] $VALUES
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.Boolean hideExpandedLargeIcon
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource ContentUri
com.google.android.gms.internal.measurement.zzgd: boolean zzz
androidx.window.R$styleable: int SplitPlaceholderRule_splitMinWidth
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.layout.SidecarAdapter sidecarAdapter
io.flutter.plugin.platform.SingleViewPresentation: int viewId
com.google.android.gms.internal.measurement.zzek: int zze
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String SHOW_BADGE
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: long[] vibrationPattern
com.google.android.gms.internal.measurement.zzer: int zzd
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PLAY_SOUND
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String INDETERMINATE
com.google.android.gms.internal.measurement.zzgk: com.google.android.gms.internal.measurement.zzgk zza
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String WHEN
androidx.window.core.Bounds: int bottom
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArraySet splitRules
com.google.android.gms.internal.measurement.zzgd: int zzY
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle Inbox
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Object largeIcon
com.google.android.gms.internal.measurement.zzgd: java.lang.String zzad
kotlin.jvm.internal.FunctionReference: int flags
com.google.android.gms.internal.measurement.zzgd: int zzK
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker$Companion $$INSTANCE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String scheduledDateTime
com.google.android.gms.internal.measurement.zzek: boolean zzh
com.google.android.gms.internal.measurement.zzgd: long zzn
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_COLOR_BLUE
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String PERMISSION_REQUEST_IN_PROGRESS_ERROR_CODE
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation: com.dexterous.flutterlocalnotifications.models.PersonDetails person
com.google.android.gms.internal.measurement.zzer: boolean zzf
com.google.android.gms.common.Feature: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency Weekly
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHANNEL_SHOW_BADGE
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval Weekly
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer iconResourceId
io.flutter.view.AccessibilityViewEmbedder: io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors reflectionAccessors
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String ID
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View view
android.support.v4.media.RatingCompat: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval EveryMinute
com.dexterous.flutterlocalnotifications.models.Time: java.lang.Integer second
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: java.util.Map consumerToJobMap
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean attached
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INPUT_RESULT
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents DayOfMonthAndTime
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_NOTIFICATION_APP_LAUNCH_DETAILS_METHOD
com.google.android.gms.internal.measurement.zzgi: com.google.android.gms.internal.measurement.zzli zzg
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String COLOR_ALPHA
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String MATCH_DATE_TIME_COMPONENTS
com.dexterous.flutterlocalnotifications.models.NotificationDetails: long[] vibrationPattern
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
com.google.android.gms.internal.measurement.zzgg: int zzd
kotlinx.coroutines.DispatchedCoroutine: int _decision
com.google.android.gms.internal.measurement.zzff: java.lang.String zzq
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.lang.Boolean htmlFormatContentTitle
com.google.android.gms.internal.measurement.zzgr: com.google.android.gms.internal.measurement.zzgr zza
kotlinx.coroutines.internal.LimitedDispatcher: int runningWorkers
androidx.window.layout.WindowInfoTracker: androidx.window.layout.WindowInfoTracker$Companion Companion
androidx.window.layout.FoldingFeature$OcclusionType: java.lang.String description
com.google.android.gms.internal.measurement.zzgd: int zzC
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List finalClippingPaths
com.google.android.gms.internal.measurement.zzer: java.lang.String zzh
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.content.Context applicationContext
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String payload
com.google.android.gms.internal.measurement.zzgd: long zzk
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String VIBRATION_PATTERN
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CREATE_NOTIFICATION_CHANNEL_GROUP_METHOD
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type FOLD
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State$Companion Companion
io.flutter.embedding.engine.FlutterJNI: float displayDensity
com.google.android.gms.internal.measurement.zzff: long zze
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType FULL
com.google.android.gms.internal.measurement.zzfv: com.google.android.gms.internal.measurement.zzfv zza
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.sidecar.SidecarDeviceState lastDeviceState
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String PLAY_SOUND
com.google.android.gms.internal.measurement.zzgm: long zzh
androidx.window.core.Bounds: int top
kotlin.jvm.internal.CallableReference: java.lang.String signature
android.support.v4.os.ResultReceiver: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: com.dexterous.flutterlocalnotifications.models.BitmapSource largeIconBitmapSource
com.google.android.gms.internal.measurement.zzff: com.google.android.gms.internal.measurement.zzli zzj
com.google.android.gms.internal.measurement.zzey: com.google.android.gms.internal.measurement.zzey zza
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: boolean mActive
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String ALLOW_GENERATED_REPLIES
androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String description
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_LINES
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean permissionRequestInProgress
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
com.google.android.gms.internal.measurement.zzei: int zzd
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean allowWhileIdle
com.google.android.gms.internal.measurement.zzff: com.google.android.gms.internal.measurement.zzli zzm
kotlin.collections.IntIterator: IntIterator()
androidx.window.embedding.ActivityStack: boolean contains(android.app.Activity)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection valueOf(java.lang.String)
androidx.webkit.internal.ApiHelperForM: void postMessage(android.webkit.WebMessagePort,android.webkit.WebMessage)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KFunction getReflected()
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void lambda$didReinitializeFirebaseCore$1(com.google.android.gms.tasks.TaskCompletionSource)
androidx.core.view.WindowInsetsCompat$Impl: void setStableInsets(androidx.core.graphics.Insets)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifierBase(int)
androidx.core.os.UserManagerCompat$Api24Impl: boolean isUserUnlocked(android.content.Context)
androidx.window.embedding.SplitPairRule: boolean getFinishSecondaryWithPrimary()
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getWillSuppressErrorPage()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture,java.lang.Runnable)
com.google.android.gms.internal.measurement.zzfo: zzfo()
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl()
androidx.window.embedding.SplitPairFilter: SplitPairFilter(android.content.ComponentName,android.content.ComponentName,java.lang.String)
androidx.window.core.Version: int getMinor()
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
androidx.core.app.NotificationCompatBuilder$Api23Impl: android.app.Notification$Builder setSmallIcon(android.app.Notification$Builder,java.lang.Object)
com.google.firebase.messaging.EnhancedIntentService: EnhancedIntentService()
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails fromNotificationDetails(com.dexterous.flutterlocalnotifications.models.NotificationDetails)
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeRunBundleAndSnapshotFromLibrary(long,java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation getDefaultStyleInformation(java.util.Map)
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityResumed(com.google.android.gms.dynamic.IObjectWrapper,long)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setUserId(java.lang.String,long)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void addListener(java.util.concurrent.Executor,androidx.core.util.Consumer,kotlinx.coroutines.flow.Flow)
androidx.window.layout.SidecarCompat: void unregisterComponentCallback(android.app.Activity)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getSystemGestureInsets()
com.google.android.gms.measurement.internal.zzha: com.google.android.gms.measurement.internal.zzha[] values()
androidx.core.view.ViewCompat$Api21Impl: boolean isNestedScrollingEnabled(android.view.View)
androidx.window.embedding.ExtensionEmbeddingBackend: boolean isSplitSupported()
org.chromium.support_lib_boundary.WebAuthnCallbackBoundaryInterface: void onResult(int,android.content.Intent)
androidx.core.app.RemoteInput$Api20Impl: void addResultsToIntent(java.lang.Object,android.content.Intent,android.os.Bundle)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType valueOf(java.lang.String)
androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String toString()
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
androidx.window.layout.SidecarCompat$TranslatingCallback: SidecarCompat$TranslatingCallback(androidx.window.layout.SidecarCompat)
androidx.core.app.NotificationCompat$InboxStyle$Api16Impl: android.app.Notification$InboxStyle addLine(android.app.Notification$InboxStyle,java.lang.CharSequence)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void cancel(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
kotlin.internal.PlatformImplementations: PlatformImplementations()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap decodeImage(java.nio.ByteBuffer,long)
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController getInstance()
io.flutter.view.AccessibilityViewEmbedder: java.lang.Integer getRecordFlutterId(android.view.View,android.view.accessibility.AccessibilityRecord)
androidx.window.layout.FoldingFeature$State$Companion: FoldingFeature$State$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
androidx.core.app.RemoteInput$Api26Impl: void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map)
com.google.android.gms.internal.measurement.zzkk: zzkk()
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat valueOf(java.lang.String)
androidx.window.embedding.SplitPairFilter: android.content.ComponentName getPrimaryActivityName()
androidx.core.app.NotificationCompat$Builder$Api21Impl: android.media.AudioAttributes$Builder setUsage(android.media.AudioAttributes$Builder,int)
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle[] values()
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformView,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,android.view.View$OnFocusChangeListener)
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type[] values()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void scheduleNextRepeatingNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
kotlin.jvm.internal.CallableReference: boolean isSuspend()
androidx.window.embedding.SplitRule$Api30Impl: android.graphics.Rect getBounds(android.view.WindowMetrics)
androidx.window.embedding.ExtensionEmbeddingBackend: void access$setGlobalInstance$cp(androidx.window.embedding.ExtensionEmbeddingBackend)
androidx.core.app.NotificationCompatBuilder$Api31Impl: android.app.Notification$Action$Builder setAuthenticationRequired(android.app.Notification$Action$Builder,boolean)
androidx.webkit.internal.ApiHelperForM: void setWebMessageCallback(android.webkit.WebMessagePort,androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat)
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: ExtensionsWindowLayoutInfoAdapter()
androidx.core.view.WindowInsetsCompat$Impl28: int hashCode()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setRequestedWithHeaderOriginAllowList(java.util.Set)
com.google.android.gms.internal.measurement.zzob: com.google.android.gms.internal.measurement.zzob[] values()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void resetAnalyticsData(long)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchSemanticsAction(long,int,int,java.nio.ByteBuffer,int)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] values()
com.google.android.gms.internal.common.zzc: zzc()
kotlinx.coroutines.JobCancellingNode: JobCancellingNode()
androidx.webkit.internal.ApiHelperForP: boolean isTracing(android.webkit.TracingController)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType valueOf(java.lang.String)
androidx.core.app.NotificationCompat$BigPictureStyle$Api16Impl: android.app.Notification$BigPictureStyle setBigContentTitle(android.app.Notification$BigPictureStyle,java.lang.CharSequence)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$FileChooserMode: io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$FileChooserMode valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: boolean isImportantForAccessibility(android.view.View)
androidx.window.layout.WindowMetrics: java.lang.String toString()
com.google.firebase.messaging.FirebaseMessagingService: FirebaseMessagingService()
org.chromium.support_lib_boundary.JsReplyProxyBoundaryInterface: void postMessage(java.lang.String)
androidx.core.app.ActivityCompat$Api23Impl: void onSharedElementsReady(java.lang.Object)
com.google.android.gms.internal.measurement.zzam: zzam()
kotlin.jvm.internal.CallableReference: java.lang.Object call(java.lang.Object[])
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessage(java.lang.String,java.nio.ByteBuffer,int,long)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: void invokeSuspend$lambda-0(kotlinx.coroutines.channels.Channel,androidx.window.layout.WindowLayoutInfo)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
androidx.window.embedding.MatcherUtils: MatcherUtils()
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetTop(android.view.DisplayCutout)
androidx.core.view.ViewCompat$Api16Impl: boolean hasOverlappingRendering(android.view.View)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: HardwareFoldingFeature$Type$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.dexterous.flutterlocalnotifications.models.BitmapSource: com.dexterous.flutterlocalnotifications.models.BitmapSource valueOf(java.lang.String)
org.chromium.support_lib_boundary.IsomorphicObjectBoundaryInterface: java.lang.Object getOrCreatePeer(java.util.concurrent.Callable)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getProxyController()
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: android.net.Uri cache(byte[],java.lang.String,java.lang.String)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.String toString()
io.flutter.embedding.engine.FlutterJNI: void nativeSetSemanticsEnabled(long,boolean)
com.google.android.gms.internal.measurement.zzky: zzky()
androidx.window.embedding.EmbeddingTranslatingCallback: EmbeddingTranslatingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface,androidx.window.embedding.EmbeddingAdapter)
androidx.window.layout.SidecarCompat: boolean validateExtensionInterface()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.app.AlarmManager getAlarmManager(android.content.Context)
androidx.window.embedding.ActivityStack: java.util.List getActivities$window_release()
kotlinx.coroutines.CancelHandler: CancelHandler()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer getCallback()
androidx.webkit.internal.ApiHelperForM: void postVisualStateCallback(android.webkit.WebView,long,androidx.webkit.WebViewCompat$VisualStateCallback)
com.google.android.gms.measurement.AppMeasurement: long generateEventId()
androidx.core.view.WindowInsetsCompat$Impl20: boolean isVisible(int)
androidx.core.app.RemoteInput$Api26Impl: java.util.Set getAllowedDataTypes(java.lang.Object)
com.google.android.gms.internal.measurement.zzei: zzei()
com.google.android.gms.internal.measurement.zzae: zzae()
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchEmptyPlatformMessage(long,java.lang.String,int)
com.google.android.gms.internal.measurement.zzlb: zzlb()
androidx.core.view.WindowInsetsCompat$Impl20: boolean isRound()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.google.android.gms.internal.measurement.zzko: zzko()
org.chromium.support_lib_boundary.util.BoundaryInterfaceReflectionUtil: BoundaryInterfaceReflectionUtil()
androidx.window.core.Version$Companion: Version$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateRefreshRate(float)
androidx.media.AudioAttributesImplBaseParcelizer: androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel)
androidx.window.embedding.SplitRule: int hashCode()
io.flutter.embedding.engine.FlutterJNI: void ensureAttachedToNative()
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
com.google.gson.ToNumberPolicy: com.google.gson.ToNumberPolicy valueOf(java.lang.String)
com.google.firebase.iid.FirebaseInstanceIdReceiver: FirebaseInstanceIdReceiver()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConsentThirdParty(android.os.Bundle,long)
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzff: zzff()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$300(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void remove()
androidx.media.AudioAttributesCompatParcelizer: void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel)
androidx.core.app.NotificationCompat$BubbleMetadata$Api29Impl: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
androidx.webkit.internal.ApiHelperForO: android.webkit.WebViewClient getWebViewClient(android.webkit.WebView)
io.flutter.embedding.engine.FlutterJNI: void nativeNotifyLowMemoryWarning(long)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState valueOf(java.lang.String)
io.flutter.view.AccessibilityBridge$StringAttribute: AccessibilityBridge$StringAttribute()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.core.app.NotificationCompat$CallStyle$Api20Impl: android.app.Notification$Action$Builder createActionBuilder(int,java.lang.CharSequence,android.app.PendingIntent)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceRequestData: GeneratedAndroidWebView$WebResourceRequestData()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getMutators()
androidx.core.app.NotificationCompatBuilder$Api16Impl: android.app.Notification build(android.app.Notification$Builder)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: NotificationDetails()
dev.fluttercommunity.plus.share.ShareFileProvider: ShareFileProvider()
androidx.window.embedding.EmbeddingCompat$Companion: boolean isEmbeddingAvailable()
androidx.window.embedding.ActivityStack: boolean isEmpty()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void setWebMessageCallback(java.lang.reflect.InvocationHandler)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.app.PendingIntent getBroadcastPendingIntent(android.content.Context,int,android.content.Intent)
org.chromium.support_lib_boundary.WebMessageListenerBoundaryInterface: void onPostMessage(android.webkit.WebView,java.lang.reflect.InvocationHandler,android.net.Uri,boolean,java.lang.reflect.InvocationHandler)
androidx.window.embedding.EmbeddingBackend: void unregisterSplitListenerForActivity(androidx.core.util.Consumer)
androidx.media.AudioAttributesImplApi21Parcelizer: AudioAttributesImplApi21Parcelizer()
androidx.media.AudioAttributesImplApi21Parcelizer: void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel)
com.google.android.gms.internal.measurement.zzej: zzej()
androidx.core.app.NotificationCompat$MessagingStyle$Api28Impl: android.app.Notification$MessagingStyle createMessagingStyle(android.app.Person)
androidx.window.layout.SidecarWindowBackend: SidecarWindowBackend(androidx.window.layout.ExtensionInterfaceCompat)
android.support.v4.media.AudioAttributesImplApi21Parcelizer: void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap nativeGetBitmap(long)
androidx.window.embedding.SplitRuleParser: java.util.Set parseSplitRules$window_release(android.content.Context,int)
kotlinx.coroutines.internal.LockFreeLinkedListNode: LockFreeLinkedListNode()
androidx.media.AudioAttributesImplBaseParcelizer: AudioAttributesImplBaseParcelizer()
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: HiddenLifecycleReference(androidx.lifecycle.Lifecycle)
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController access$getGlobalInstance$cp()
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode valueOf(java.lang.String)
androidx.window.embedding.MatcherUtils: boolean areActivityOrIntentComponentsMatching$window_release(android.app.Activity,android.content.ComponentName)
androidx.window.embedding.SplitPairFilter: int hashCode()
com.google.android.gms.internal.measurement.zzfq: zzfq()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readLedInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
androidx.window.layout.ExtensionInterfaceCompat: void setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
androidx.collection.SimpleArrayMap: SimpleArrayMap()
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDisplayFeatures(java.util.List,java.util.List)
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat getWindowExtension()
androidx.window.embedding.ActivityFilter: int hashCode()
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend access$getGlobalInstance$cp()
androidx.core.app.NotificationCompat$BigPictureStyle$Api16Impl: void setBigLargeIcon(android.app.Notification$BigPictureStyle,android.graphics.Bitmap)
androidx.window.embedding.ActivityStack: boolean equals(java.lang.Object)
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.WindowLayoutInfo translate$window_release(android.app.Activity,androidx.window.extensions.layout.WindowLayoutInfo)
com.google.gson.ToNumberPolicy: com.google.gson.ToNumberPolicy[] values()
kotlin.jvm.internal.FunctionReference: boolean isInline()
androidx.window.layout.ExtensionWindowLayoutInfoBackend: ExtensionWindowLayoutInfoBackend(androidx.window.extensions.layout.WindowLayoutComponent)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityDestroyed(com.google.android.gms.dynamic.IObjectWrapper,long)
android.support.v4.media.AudioAttributesCompatParcelizer: androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel)
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface: int getType()
androidx.core.view.WindowInsetsCompat$Impl: void copyRootViewBounds(android.view.View)
com.google.android.gms.internal.measurement.zzfj: zzfj()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: WindowInfoTrackerCallbackAdapter(androidx.window.layout.WindowInfoTracker)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void repeatNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.lang.Boolean)
androidx.core.view.ViewCompat$Api16Impl: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)
com.akpatelbullion.MainActivity: MainActivity()
androidx.window.embedding.EmbeddingRule: EmbeddingRule()
com.google.firebase.analytics.FirebaseAnalytics: com.google.android.gms.measurement.internal.zzil getScionFrontendApiImplementation(android.content.Context,android.os.Bundle)
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: InboxStyleInformation(java.lang.Boolean,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.util.ArrayList,java.lang.Boolean)
com.google.android.gms.internal.measurement.zzgc: zzgc()
io.flutter.embedding.engine.FlutterJNI: io.flutter.view.FlutterCallbackInformation nativeLookupCallbackInformation(long)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onPageCommitVisible(android.webkit.WebView,java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface: boolean terminate()
kotlin.jvm.internal.TypeIntrinsics: TypeIntrinsics()
androidx.window.core.Bounds: Bounds(int,int,int,int)
org.chromium.support_lib_boundary.VisualStateCallbackBoundaryInterface: void onComplete(long)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityPaused(com.google.android.gms.dynamic.IObjectWrapper,long)
androidx.core.app.AlarmManagerCompat$Api19Impl: void setExact(android.app.AlarmManager,int,long,android.app.PendingIntent)
io.flutter.plugins.firebase.messaging.FlutterFirebaseAppRegistrar: FlutterFirebaseAppRegistrar()
com.google.android.gms.internal.measurement.zzgy: zzgy()
com.google.firebase.messaging.threads.ThreadPriority: com.google.firebase.messaging.threads.ThreadPriority valueOf(java.lang.String)
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30()
androidx.window.layout.SidecarAdapter$Companion: SidecarAdapter$Companion()
androidx.window.layout.HardwareFoldingFeature: android.graphics.Rect getBounds()
io.flutter.embedding.engine.FlutterJNI: void nativeSetViewportMetrics(long,float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.util.Map access$200(com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory)
android.support.v4.media.AudioAttributesImplApi21Parcelizer: AudioAttributesImplApi21Parcelizer()
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$ConsoleMessageLevel: io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$ConsoleMessageLevel valueOf(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness valueOf(java.lang.String)
androidx.core.graphics.drawable.IconCompat$Api28Impl: java.lang.String getResPackage(java.lang.Object)
kotlin.coroutines.jvm.internal.SuspendLambda: int getArity()
android.support.v4.media.AudioAttributesImplBaseParcelizer: androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel)
androidx.core.util.ObjectsCompat$Api19Impl: int hash(java.lang.Object[])
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemWindowInsets()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)
androidx.core.view.ViewGroupCompat$Api21Impl: void setTransitionGroup(android.view.ViewGroup,boolean)
androidx.core.content.ContextCompat$Api24Impl: android.content.Context createDeviceProtectedStorageContext(android.content.Context)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setSystemWindowInsets(androidx.core.graphics.Insets)
com.google.gson.Gson$FutureTypeAdapter: Gson$FutureTypeAdapter()
androidx.core.app.NotificationCompat$InboxStyle$Api16Impl: android.app.Notification$InboxStyle setBigContentTitle(android.app.Notification$InboxStyle,java.lang.CharSequence)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onEnd(android.view.WindowInsetsAnimation)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readBigPictureStyleInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map,com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: ImeSyncDeferringInsetsCallback$AnimationCallback(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceWindowChanged(android.view.Surface)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getAllowContentAccess()
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessageResponse(int,java.nio.ByteBuffer)
androidx.core.view.ViewCompat$Api19Impl: int getAccessibilityLiveRegion(android.view.View)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType[] values()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.graphics.Bitmap getBitmapFromSource(android.content.Context,java.lang.Object,com.dexterous.flutterlocalnotifications.models.BitmapSource)
androidx.window.layout.SidecarCompat$Companion: androidx.window.core.Version getSidecarVersion()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void ensureRunningOnMainThread()
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: FlutterFirebasePluginRegistry()
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] values()
androidx.core.app.NotificationManagerCompat$Api26Impl: void deleteNotificationChannel(android.app.NotificationManager,java.lang.String)
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList createLocaleList(java.util.Locale[])
io.flutter.embedding.engine.FlutterJNI: void onVsync(long,long,long)
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcel)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void setSafeBrowsingWhitelist(java.util.List,android.webkit.ValueCallback)
androidx.window.embedding.SplitPlaceholderRule: java.util.Set getFilters()
com.google.android.datatransport.runtime.backends.BackendResponse: BackendResponse()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertServiceWorkerSettings(java.lang.reflect.InvocationHandler)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonInitializeResponse: GeneratedAndroidFirebaseCore$PigeonInitializeResponse()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View$OnApplyWindowInsetsListener getInsetsListener()
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageEmptyResponseCallback(int)
androidx.window.layout.SidecarWindowBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
com.dexterous.flutterlocalnotifications.models.BitmapSource: com.dexterous.flutterlocalnotifications.models.BitmapSource[] values()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler[] createWebMessageChannel()
kotlinx.coroutines.android.AndroidExceptionPreHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
androidx.window.core.Version: java.lang.String toString()
androidx.window.core.Version: androidx.window.core.Version access$getVERSION_1_0$cp()
androidx.window.embedding.EmbeddingAdapter: java.util.List translate(java.util.List)
androidx.window.embedding.SplitPairFilter: java.lang.String toString()
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: NotificationChannelAction(java.lang.String,int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$100(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.window.embedding.ActivityFilter: android.content.ComponentName getComponentName()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceChanged(int,int)
kotlin.jvm.internal.FunctionReference: int getArity()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setAllowContentAccess(boolean)
io.flutter.embedding.engine.FlutterJNI: void setPlatformMessageHandler(io.flutter.embedding.engine.dart.PlatformMessageHandler)
com.google.android.gms.internal.measurement.zzfx: zzfx()
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface: byte[] getAsArrayBuffer()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateJavaAssetManager(long,android.content.res.AssetManager,java.lang.String)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.net.Uri getUri(java.lang.Object)
com.google.android.gms.internal.measurement.zzmd: zzmd()
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setTimeoutAfter(android.app.Notification$Builder,long)
com.dexterous.flutterlocalnotifications.models.BitmapSource: BitmapSource(java.lang.String,int)
androidx.window.embedding.SplitRule: float getSplitRatio()
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder addAction(android.app.Notification$Builder,android.app.Notification$Action)
androidx.core.app.NotificationCompat$BigTextStyle$Api16Impl: android.app.Notification$BigTextStyle createBigTextStyle(android.app.Notification$Builder)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getForceDark()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState[] values()
io.flutter.embedding.engine.FlutterJNI: void updateRefreshRate()
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] values()
com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform: com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform[] values()
com.google.android.gms.measurement.AppMeasurement: java.lang.String getCurrentScreenClass()
com.dexterous.flutterlocalnotifications.models.NotificationAction: NotificationAction(java.util.Map)
io.flutter.embedding.engine.FlutterJNI: boolean getIsSoftwareRenderingEnabled()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void releaseIntercepted()
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface: java.lang.reflect.InvocationHandler getServiceWorkerWebSettings()
androidx.webkit.internal.ApiHelperForP: android.os.Looper getWebViewLooper(android.webkit.WebView)
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateDisplayMetrics(long)
kotlin.random.Random: Random()
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo convertToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,int,android.view.View)
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction[] values()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$400(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getFOLD$cp()
androidx.core.view.WindowInsetsCompat$Impl20: void loadReflectionField()
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setRemoteInputHistory(android.app.Notification$Builder,java.lang.CharSequence[])
com.google.firebase.components.ComponentDiscoveryService: ComponentDiscoveryService()
io.flutter.embedding.engine.FlutterJNI: void onPreEngineRestart()
androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface: void onSplitInfoChanged(java.util.List)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootViewData(androidx.core.graphics.Insets)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21)
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOp(android.app.AppOpsManager,java.lang.String,java.lang.String)
androidx.window.embedding.ExtensionEmbeddingBackend: ExtensionEmbeddingBackend(androidx.window.embedding.EmbeddingInterfaceCompat)
kotlin.jvm.internal.CallableReference: java.util.List getAnnotations()
com.dexterous.flutterlocalnotifications.RepeatInterval: RepeatInterval(java.lang.String,int)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.google.android.gms.internal.measurement.zzgm: zzgm()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] values()
androidx.core.view.ViewCompat$Api21Impl: void setTransitionName(android.view.View,java.lang.String)
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsN$window_release(android.app.Activity)
androidx.core.view.ViewCompat$Api16Impl: void setBackground(android.view.View,android.graphics.drawable.Drawable)
io.flutter.embedding.engine.FlutterJNI: void notifyLowMemoryWarning()
androidx.core.app.NotificationCompat$MessagingStyle$Api24Impl: android.app.Notification$MessagingStyle createMessagingStyle(java.lang.CharSequence)
androidx.window.layout.WindowMetricsCalculatorCompat: int getNavigationBarHeight(android.content.Context)
kotlin.jvm.internal.CallableReference: boolean isAbstract()
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.lang.Class access$100(com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()
com.google.android.gms.common.api.GoogleApiActivity: GoogleApiActivity()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String getNextFireDateMatchingDateTimeComponents(com.dexterous.flutterlocalnotifications.models.NotificationDetails)
androidx.window.embedding.SplitRule$Api30Impl: SplitRule$Api30Impl()
androidx.window.layout.SidecarCompat$FirstAttachAdapter: void onViewDetachedFromWindow(android.view.View)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getSafeBrowsingEnabled()
androidx.core.app.BundleCompat$Api18Impl: void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder)
androidx.window.embedding.ActivityRule: ActivityRule(java.util.Set,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getVisibleInsets(android.view.View)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setEventInterceptor(com.google.android.gms.internal.measurement.zzci)
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents[] values()
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPairFilter parseSplitPairFilter(android.content.Context,android.content.res.XmlResourceParser)
androidx.core.view.ViewCompat$Api16Impl: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
androidx.window.layout.WindowMetricsCalculatorCompat: WindowMetricsCalculatorCompat()
androidx.window.embedding.SplitController: void access$setGlobalInstance$cp(androidx.window.embedding.SplitController)
androidx.window.embedding.ActivityFilter: java.lang.String getIntentAction()
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int,int)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void addWindowLayoutInfoListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KVisibility getVisibility()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceCreated(long,android.view.Surface)
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getAdjustedDefault()
androidx.core.view.ViewCompat$Api21Impl: void setElevation(android.view.View,float)
androidx.window.layout.HardwareFoldingFeature: HardwareFoldingFeature(androidx.window.core.Bounds,androidx.window.layout.HardwareFoldingFeature$Type,androidx.window.layout.FoldingFeature$State)
androidx.window.core.Version$Companion: androidx.window.core.Version parse(java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$402(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.View)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void saveScheduledNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
io.flutter.view.AccessibilityViewEmbedder: void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
androidx.core.app.NotificationManagerCompat$Api26Impl: void createNotificationChannelGroups(android.app.NotificationManager,java.util.List)
com.dexterous.flutterlocalnotifications.utils.BooleanUtils: boolean getValue(java.lang.Boolean)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature valueOf(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode valueOf(java.lang.String)
kotlin.jvm.internal.CallableReference: java.lang.Object callBy(java.util.Map)
com.google.android.gms.internal.measurement.zzge: zzge()
androidx.window.embedding.ActivityFilter: boolean matchesIntent(android.content.Intent)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: int getDrawableResourceId(android.content.Context,java.lang.String)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPlaceholderRule parseSplitPlaceholderRule(android.content.Context,android.content.res.XmlResourceParser)
androidx.webkit.internal.ApiHelperForO: boolean getSafeBrowsingEnabled(android.webkit.WebSettings)
com.google.android.gms.internal.measurement.zzfe: zzfe()
androidx.window.core.Bounds: boolean isZero()
androidx.window.embedding.SplitPairRule: java.util.Set getFilters()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void removeListener(androidx.core.util.Consumer)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void initSafeBrowsing(android.content.Context,android.webkit.ValueCallback)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine getAttachedFlutterEngine()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture()
com.google.firebase.StartupTime: StartupTime()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setStyle(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.window.layout.HardwareFoldingFeature$Type: HardwareFoldingFeature$Type(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceCreated(android.view.Surface)
androidx.core.view.ViewCompat$Api16Impl: int getMinimumHeight(android.view.View)
androidx.window.embedding.SplitPlaceholderRule: SplitPlaceholderRule(java.util.Set,android.content.Intent,int,int,float,int)
androidx.window.layout.WindowMetrics: WindowMetrics(android.graphics.Rect)
com.google.android.gms.measurement.AppMeasurementService: AppMeasurementService()
androidx.fragment.app.Fragment: Fragment()
androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] values()
androidx.core.view.ViewCompat$Api28Impl: boolean isAccessibilityHeading(android.view.View)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readColor(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
androidx.window.layout.WindowLayoutInfo: int hashCode()
io.flutter.embedding.engine.FlutterJNI: void nativePrefetchDefaultFontManager()
androidx.core.app.NotificationCompat$CallStyle$Api28Impl: android.app.Notification$Builder addPerson(android.app.Notification$Builder,android.app.Person)
androidx.window.embedding.ExtensionEmbeddingBackend: void registerRule(androidx.window.embedding.EmbeddingRule)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: WindowInfoTrackerCallbackAdapter$addListener$1$1(kotlinx.coroutines.flow.Flow,androidx.core.util.Consumer,kotlin.coroutines.Continuation)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions: GeneratedAndroidFirebaseCore$PigeonFirebaseOptions()
io.flutter.embedding.engine.FlutterJNI: java.lang.String getObservatoryUri()
androidx.window.embedding.SplitPlaceholderRule: androidx.window.embedding.SplitPlaceholderRule plus$window_release(androidx.window.embedding.ActivityFilter)
androidx.window.layout.WindowInfoTracker: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.Set getSplitRules()
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: SidecarWindowBackend$ExtensionListenerImpl(androidx.window.layout.SidecarWindowBackend)
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker getOrCreate(android.content.Context)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setCategory(android.app.Notification$Builder,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30)
com.google.android.gms.internal.measurement.zzfp: zzfp()
com.google.android.gms.internal.measurement.zzgt: zzgt()
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setCustomBigContentView(android.app.Notification$Builder,android.widget.RemoteViews)
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.view.WindowInsetsCompat build()
androidx.core.view.ViewCompat$Api21Impl: float getTranslationZ(android.view.View)
androidx.core.app.NotificationCompatBuilder$Api16Impl: android.app.Notification$Builder setPriority(android.app.Notification$Builder,int)
io.flutter.view.AccessibilityBridge$LocaleStringAttribute: AccessibilityBridge$LocaleStringAttribute()
androidx.core.app.NotificationManagerCompat$Api26Impl: java.lang.String getId(android.app.NotificationChannel)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsP$window_release(android.app.Activity)
androidx.core.graphics.drawable.IconCompat$Api30Impl: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)
androidx.fragment.app.FragmentTransaction$Op: FragmentTransaction$Op()
androidx.core.app.NotificationManagerCompat$Api26Impl: void createNotificationChannelGroup(android.app.NotificationManager,android.app.NotificationChannelGroup)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView getCurrentImageSurface()
io.flutter.embedding.android.FlutterImageView: android.view.Surface getSurface()
com.google.android.gms.internal.measurement.zznk: zznk()
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$600(io.flutter.embedding.android.FlutterSplashView$SavedState)
androidx.core.app.NotificationCompat$MessagingStyle$Api16Impl: android.app.Notification$BigTextStyle createBigTextStyle(android.app.Notification$Builder)
androidx.window.layout.SidecarAdapter: SidecarAdapter()
androidx.media.AudioAttributesImplApi21: AudioAttributesImplApi21()
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDeviceState(androidx.window.sidecar.SidecarDeviceState,androidx.window.sidecar.SidecarDeviceState)
com.google.android.datatransport.cct.internal.LogEvent: LogEvent()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void generateEventId(com.google.android.gms.internal.measurement.zzcf)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: BigPictureStyleInformation(java.lang.Boolean,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.Object,com.dexterous.flutterlocalnotifications.models.BitmapSource,java.lang.Object,com.dexterous.flutterlocalnotifications.models.BitmapSource,java.lang.Boolean)
com.google.android.gms.internal.measurement.zzfb: zzfb()
com.google.android.gms.internal.measurement.zzka: zzka()
androidx.core.view.ViewCompat$Api20Impl: void requestApplyInsets(android.view.View)
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: android.os.ParcelFileDescriptor openFile(android.content.ContentProvider,android.net.Uri)
kotlin.jvm.internal.FunctionReference: boolean equals(java.lang.Object)
org.chromium.support_lib_boundary.WebMessageBoundaryInterface: java.lang.reflect.InvocationHandler[] getPorts()
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: WindowMetricsCalculator$Companion$overrideDecorator$1(java.lang.Object)
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency[] values()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.util.ArrayList readMessages(java.util.ArrayList)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getEnterpriseAuthenticationAppLinkPolicyEnabled()
androidx.window.layout.SidecarWindowBackend: void access$setGlobalInstance$cp(androidx.window.layout.SidecarWindowBackend)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$ConsoleMessage: GeneratedAndroidWebView$ConsoleMessage()
androidx.window.embedding.SplitPairRule: androidx.window.embedding.SplitPairRule plus$window_release(androidx.window.embedding.SplitPairFilter)
com.google.firebase.messaging.FirebaseMessagingRegistrar: java.util.List getComponents()
kotlin.jvm.internal.Lambda: java.lang.String toString()
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList getWindowLayoutChangeCallbacks()
androidx.window.embedding.SplitController: void initialize(android.content.Context,int)
androidx.arch.core.internal.SafeIterableMap: SafeIterableMap()
kotlinx.coroutines.CompletionHandlerBase: CompletionHandlerBase()
kotlinx.coroutines.internal.ThreadSafeHeap: ThreadSafeHeap()
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: void onLowMemory()
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] values()
androidx.fragment.app.FragmentManagerImpl: FragmentManagerImpl()
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setGroupAlertBehavior(android.app.Notification$Builder,int)
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack getPrimaryActivityStack()
androidx.core.view.WindowInsetsCompat$Impl: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void updateDisplayMetrics(int,float,float,float)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
androidx.window.core.Version$Companion: androidx.window.core.Version getUNKNOWN()
androidx.core.text.TextUtilsCompat$Api17Impl: int getLayoutDirectionFromLocale(java.util.Locale)
io.flutter.embedding.android.FlutterView: void setWindowInfoListenerDisplayFeatures(androidx.window.layout.WindowLayoutInfo)
androidx.window.layout.SidecarAdapter$Companion: androidx.window.layout.DisplayFeature translate$window_release(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDeviceState)
androidx.window.embedding.ActivityRule: int hashCode()
com.google.android.gms.common.api.Api$AbstractClientBuilder: Api$AbstractClientBuilder()
com.google.android.gms.internal.measurement.zzgb: zzgb()
androidx.window.core.Version$bigInteger$2: Version$bigInteger$2(androidx.window.core.Version)
com.dexterous.flutterlocalnotifications.ActionBroadcastReceiver: ActionBroadcastReceiver()
androidx.window.layout.WindowInfoTrackerImpl: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: android.app.Notification$CallStyle forScreeningCall(android.app.Person,android.app.PendingIntent,android.app.PendingIntent)
androidx.window.R$attr: R$attr()
androidx.window.core.Version: int hashCode()
androidx.window.core.Bounds: java.lang.String toString()
com.google.android.gms.internal.measurement.zzho: zzho()
androidx.activity.ComponentActivity$NonConfigurationInstances: ComponentActivity$NonConfigurationInstances()
com.google.android.gms.internal.measurement.zznu: zznu()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getAllowFileAccess()
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityPairPredicates$lambda-1(androidx.window.embedding.EmbeddingAdapter,java.util.Set,android.util.Pair)
androidx.webkit.internal.ApiHelperForP: android.webkit.TracingController getTracingControllerInstance()
androidx.window.layout.HardwareFoldingFeature$Companion: HardwareFoldingFeature$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.ViewCompat$Api21Impl: boolean hasNestedScrollingParent(android.view.View)
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface: void setServiceWorkerClient(java.lang.reflect.InvocationHandler)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory of(java.lang.Class,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeImageHeaderCallback(long,int,int)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] values()
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityDelegate(io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate)
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityPredicates$lambda-6(java.util.Set,android.app.Activity)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: java.util.Set getRequestedWithHeaderOriginAllowList()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void removeListener(androidx.core.util.Consumer)
androidx.core.app.NotificationCompatBuilder$Api28Impl: android.app.Notification$Action$Builder setSemanticAction(android.app.Notification$Action$Builder,int)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] values()
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarAdapter access$getSidecarAdapter$p(androidx.window.layout.SidecarCompat)
androidx.window.core.Bounds: int hashCode()
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason[] values()
androidx.webkit.internal.ApiHelperForP: void setDataDirectorySuffix(java.lang.String)
androidx.window.embedding.EmbeddingInterfaceCompat: void setEmbeddingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface)
androidx.window.layout.HardwareFoldingFeature$Companion: HardwareFoldingFeature$Companion()
com.google.android.gms.cloudmessaging.CloudMessagingReceiver: CloudMessagingReceiver()
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: java.lang.String getType(android.net.Uri)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: void setSupportLibraryVersion(java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType[] values()
androidx.core.view.WindowInsetsCompat$Impl20: void setOverriddenInsets(androidx.core.graphics.Insets[])
io.flutter.plugins.webviewflutter.WebChromeClientHostApiImpl$SecureWebChromeClient: WebChromeClientHostApiImpl$SecureWebChromeClient()
androidx.window.embedding.SplitController: void removeSplitListener(androidx.core.util.Consumer)
kotlin.jvm.internal.CallableReference: boolean isOpen()
androidx.window.core.Version$bigInteger$2: java.lang.Object invoke()
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails from(java.util.Map)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setVibrationPattern(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityStarted(com.google.android.gms.dynamic.IObjectWrapper,long)
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: android.app.Notification$CallStyle forOngoingCall(android.app.Person,android.app.PendingIntent)
kotlinx.coroutines.internal.CtorCache: CtorCache()
androidx.window.embedding.SplitInfo: float getSplitRatio()
androidx.core.text.ICUCompat$Api24Impl: android.icu.util.ULocale forLocale(java.util.Locale)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void removeWindowLayoutInfoListener(androidx.core.util.Consumer)
io.flutter.embedding.engine.FlutterJNI: void dispatchEmptyPlatformMessage(java.lang.String,int)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceDestroyed()
kotlin.jvm.internal.FunctionReference: FunctionReference(int)
kotlin.jvm.internal.CallableReference: java.lang.String getName()
androidx.window.layout.HardwareFoldingFeature: java.lang.String toString()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean onNewIntent(android.content.Intent)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void setLastInfo(androidx.window.layout.WindowLayoutInfo)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifier(int)
io.flutter.plugins.firebase.messaging.FlutterFirebaseAppRegistrar: java.util.List getComponents()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] values()
androidx.fragment.app.FragmentTransitionImpl: FragmentTransitionImpl()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface: int getErrorCode()
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.lang.String access$000(com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory)
com.google.firebase.concurrent.ExecutorsRegistrar: ExecutorsRegistrar()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void startForegroundService(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.window.R$styleable: R$styleable()
androidx.core.view.WindowInsetsCompat$Impl21: void setStableInsets(androidx.core.graphics.Insets)
com.google.android.gms.internal.measurement.zzhz: zzhz()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: FlutterLocalNotificationsPlugin()
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier[] values()
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: boolean onCreate()
kotlin.jvm.internal.CallableReference: java.util.List getParameters()
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setColor(android.app.Notification$Builder,int)
androidx.core.graphics.drawable.IconCompat$Api28Impl: android.net.Uri getUri(java.lang.Object)
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface: void setProxyOverride(java.lang.String[][],java.lang.String[],java.lang.Runnable,java.util.concurrent.Executor,boolean)
com.dexterous.flutterlocalnotifications.utils.StringUtils: java.lang.Boolean isNullOrEmpty(java.lang.String)
androidx.core.app.NotificationManagerCompat$Api26Impl: void createNotificationChannel(android.app.NotificationManager,android.app.NotificationChannel)
androidx.window.core.Bounds: int getRight()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: boolean canApplyTheme(android.graphics.drawable.Drawable)
kotlin.jvm.internal.PropertyReference: PropertyReference()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setSmallIcon(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
androidx.core.app.NotificationCompat$Builder$Api21Impl: android.media.AudioAttributes$Builder createBuilder()
io.flutter.embedding.android.FlutterView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
com.google.firebase.heartbeatinfo.HeartBeatResult: HeartBeatResult()
androidx.core.app.ActivityCompat$Api16Impl: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)
androidx.window.layout.SidecarAdapter: java.util.List translate(java.util.List,androidx.window.sidecar.SidecarDeviceState)
androidx.window.core.Version$Companion: androidx.window.core.Version getVERSION_1_0()
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void lambda$decodeImage$0(long,android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void performAction(android.os.Bundle,com.google.android.gms.internal.measurement.zzcf,long)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setShortcutId(android.app.Notification$Builder,java.lang.String)
androidx.window.core.Bounds: android.graphics.Rect toRect()
androidx.window.embedding.ActivityRule: java.util.Set getFilters()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setCacheMode(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void stopForegroundService(io.flutter.plugin.common.MethodChannel$Result)
androidx.window.embedding.EmbeddingAdapter: boolean translateParentMetricsPredicate$lambda-4(androidx.window.embedding.SplitRule,android.view.WindowMetrics)
com.google.firebase.messaging.ProtoEncoderDoNotUse: ProtoEncoderDoNotUse()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readGroupingInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void resumeWith(java.lang.Object)
androidx.media.AudioAttributesImplApi26Parcelizer: void write(androidx.media.AudioAttributesImplApi26,androidx.versionedparcelable.VersionedParcel)
com.google.android.gms.measurement.AppMeasurement: java.lang.String getGmpAppId()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)
androidx.core.app.NotificationCompat$CallStyle$Api23Impl: void setLargeIcon(android.app.Notification$Builder,android.graphics.drawable.Icon)
androidx.window.embedding.ActivityStack: ActivityStack(java.util.List,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.datatransport.runtime.SendRequest: SendRequest()
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List getLastInfo()
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void createNotificationChannelGroup(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.String permissionToOp(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeCleanupMessageData(long)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setBlockNetworkLoads(boolean)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.net.Uri retrieveSoundResourceUri(android.content.Context,java.lang.String,com.dexterous.flutterlocalnotifications.models.SoundSource)
androidx.window.layout.SidecarAdapter$Companion: int getRawSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState)
com.google.android.gms.internal.measurement.zzbl: com.google.android.gms.internal.measurement.zzbl[] values()
com.google.android.gms.internal.measurement.zzlo: zzlo()
com.google.android.gms.internal.measurement.zzcb: com.google.android.gms.internal.measurement.zzcc asInterface(android.os.IBinder)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.NotificationDetails from(java.util.Map)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler createWebView(android.webkit.WebView)
io.flutter.view.AccessibilityViewEmbedder: android.view.View platformViewOfNode(int)
androidx.window.core.Version: androidx.window.core.Version access$getVERSION_0_1$cp()
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory[] values()
androidx.window.layout.WindowInfoTracker$Companion: void overrideDecorator(androidx.window.layout.WindowInfoTrackerDecorator)
androidx.core.content.ContextCompat$Api26Impl: android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onSafeBrowsingHit(android.webkit.WebView,android.webkit.WebResourceRequest,int,java.lang.reflect.InvocationHandler)
androidx.window.embedding.EmbeddingCompat: EmbeddingCompat()
io.flutter.embedding.engine.FlutterJNI: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void setImeVisibleListener(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$ImeVisibleListener)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency valueOf(java.lang.String)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void addWebMessageListener(java.lang.String,java.lang.String[],java.lang.reflect.InvocationHandler)
android.support.v4.media.AudioAttributesCompatParcelizer: AudioAttributesCompatParcelizer()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getForceDarkBehavior()
androidx.window.embedding.SplitPairFilter: boolean matchesActivityIntentPair(android.app.Activity,android.content.Intent)
androidx.window.embedding.ActivityFilter: ActivityFilter(android.content.ComponentName,java.lang.String)
kotlin.jvm.internal.CallableReference: java.lang.Object getBoundReceiver()
android.support.v4.media.AudioAttributesImplBaseParcelizer: void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: boolean isMultiProcessEnabled()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityStopped(com.google.android.gms.dynamic.IObjectWrapper,long)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: RuntimeTypeAdapterFactory(java.lang.Class,java.lang.String)
com.google.android.gms.measurement.AppMeasurement: int getMaxUserProperties(java.lang.String)
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void backToSafety(boolean)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
kotlinx.coroutines.scheduling.WorkQueue: WorkQueue()
androidx.core.view.ViewCompat$Api21Impl: void setTranslationZ(android.view.View,float)
androidx.core.view.ViewCompat$Api16Impl: boolean hasTransientState(android.view.View)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void getNotificationChannels(io.flutter.plugin.common.MethodChannel$Result)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action$Builder createBuilder(int,java.lang.CharSequence,android.app.PendingIntent)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KDeclarationContainer getOwner()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setInboxStyle(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void zonedScheduleNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.lang.Boolean)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap getBitmap()
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: android.view.WindowInsetsAnimation$Bounds onStart(android.view.WindowInsetsAnimation,android.view.WindowInsetsAnimation$Bounds)
com.google.android.gms.internal.measurement.zzfs: zzfs()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmoji(int)
kotlinx.coroutines.YieldContext: YieldContext()
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: java.util.List getComponents()
androidx.core.app.NotificationCompat$CallStyle$Api20Impl: android.app.Notification$Action build(android.app.Notification$Action$Builder)
androidx.window.layout.DisplayCompatHelperApi28: DisplayCompatHelperApi28()
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getStatics()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logHealthData(int,java.lang.String,com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.dynamic.IObjectWrapper)
androidx.window.core.Version$Companion: androidx.window.core.Version getVERSION_0_1()
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: AnalyticsConnectorRegistrar()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRect(int,int,int,int)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setDisabledActionModeMenuItems(int)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()
com.google.android.gms.internal.measurement.zzkt: com.google.android.gms.internal.measurement.zzkt[] values()
io.flutter.embedding.engine.FlutterJNI: void loadDartDeferredLibrary(int,java.lang.String[])
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: androidx.core.app.Person buildPerson(android.content.Context,com.dexterous.flutterlocalnotifications.models.PersonDetails)
androidx.window.embedding.EmbeddingTranslatingCallback: void accept(java.util.List)
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy[] values()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: android.webkit.WebChromeClient getWebChromeClient()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceChanged(long,int,int)
com.google.firebase.iid.Registrar: com.google.firebase.iid.FirebaseInstanceId lambda$getComponents$0$Registrar(com.google.firebase.components.ComponentContainer)
androidx.window.core.Version: java.lang.String getDescription()
androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
android.support.v4.media.session.MediaControllerCompat$Callback: MediaControllerCompat$Callback()
androidx.window.layout.SidecarCompat: java.util.Map access$getWindowListenerRegisteredContexts$p(androidx.window.layout.SidecarCompat)
io.flutter.embedding.engine.loader.FlutterLoader: FlutterLoader()
com.google.android.gms.internal.measurement.zzes: zzes()
androidx.core.content.ContextCompat$Api23Impl: int getColor(android.content.Context,int)
com.google.firebase.analytics.FirebaseAnalytics: com.google.firebase.analytics.FirebaseAnalytics getInstance(android.content.Context)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Point getRealSizeForDisplay$window_release(android.view.Display)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateIntentPredicates(java.util.Set)
androidx.window.layout.WindowInfoTrackerDecorator: androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest)
androidx.core.view.WindowInsetsCompat$Impl20: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
com.google.android.gms.internal.measurement.zzgp: zzgp()
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver: AlarmManagerSchedulerBroadcastReceiver()
androidx.window.embedding.SplitRule: boolean equals(java.lang.Object)
androidx.window.embedding.SplitPairFilter: boolean matchesActivityPair(android.app.Activity,android.app.Activity)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readInboxStyleInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map,com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation)
androidx.window.layout.SidecarCompat: void setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend access$getGlobalInstance$cp()
kotlin.coroutines.jvm.internal.SuspendLambda: java.lang.String toString()
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: android.app.Notification$CallStyle setIsVideo(android.app.Notification$CallStyle,boolean)
androidx.window.layout.WindowInfoTrackerImpl$Companion: WindowInfoTrackerImpl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.gms.common.internal.zzj: zzj()
com.google.android.gms.internal.measurement.zzfw: zzfw()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void initForTests(java.util.Map)
com.google.android.gms.internal.measurement.zzaw: zzaw()
kotlin.internal.jdk7.JDK7PlatformImplementations: JDK7PlatformImplementations()
androidx.window.layout.ActivityCompatHelperApi24: ActivityCompatHelperApi24()
com.google.android.gms.measurement.AppMeasurement: java.util.List getConditionalUserProperties(java.lang.String,java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setMeasurementEnabled(boolean,long)
androidx.webkit.internal.ApiHelperForO: void setSafeBrowsingEnabled(android.webkit.WebSettings,boolean)
org.chromium.support_lib_boundary.ServiceWorkerClientBoundaryInterface: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebResourceRequest)
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState: io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.text.Spanned fromHtml(java.lang.String)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: void onSplitInfoChanged(java.util.List)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void beginAdUnitExposure(java.lang.String,long)
kotlin.jvm.internal.FunctionReference: boolean isExternal()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageResponseCallback(long,int,java.nio.ByteBuffer,int)
androidx.core.content.FileProvider$Api21Impl: java.io.File[] getExternalMediaDirs(android.content.Context)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.StackTraceElement getStackTraceElement()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingService: FlutterFirebaseMessagingService()
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void lambda$getPluginConstantsForFirebaseApp$0(com.google.firebase.FirebaseApp,com.google.android.gms.tasks.TaskCompletionSource)
androidx.window.embedding.EmbeddingBackend: java.util.Set getSplitRules()
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: BigTextStyleInformation(java.lang.Boolean,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.Boolean)
androidx.window.embedding.SplitPairFilter: java.lang.String getSecondaryActivityIntentAction()
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$WebViewPlatformView: android.webkit.WebChromeClient getWebChromeClient()
androidx.core.app.NotificationCompatBuilder$Api19Impl: android.app.Notification$Builder setExtras(android.app.Notification$Builder,android.os.Bundle)
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Drawable createAdaptiveIconDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.window.layout.WindowMetrics: WindowMetrics(androidx.window.core.Bounds)
androidx.window.embedding.SplitController: SplitController(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void release()
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: void onConfigurationChanged(android.content.res.Configuration)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int,boolean)
androidx.window.layout.EmptyDecorator: androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker)
com.google.android.gms.internal.measurement.zzks: zzks()
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: DynamiteModule$DynamiteLoaderClassLoader()
androidx.core.app.NotificationCompat$BigTextStyle$Api16Impl: android.app.Notification$BigTextStyle setSummaryText(android.app.Notification$BigTextStyle,java.lang.CharSequence)
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode[] values()
io.flutter.embedding.engine.FlutterJNI: void setSemanticsEnabled(boolean)
androidx.core.view.WindowInsetsCompat$Impl: boolean isConsumed()
com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation: DefaultStyleInformation(java.lang.Boolean,java.lang.Boolean)
androidx.window.embedding.SplitController: void clearRegisteredRules()
com.google.android.datatransport.cct.CctBackendFactory: CctBackendFactory()
androidx.window.layout.WindowBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
org.chromium.support_lib_boundary.WebResourceRequestBoundaryInterface: boolean isRedirect()
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy[] values()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: boolean validBounds(android.app.Activity,androidx.window.core.Bounds)
io.flutter.embedding.engine.FlutterJNI: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int,kotlin.coroutines.Continuation)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] values()
androidx.window.layout.WindowInfoTrackerImpl: WindowInfoTrackerImpl(androidx.window.layout.WindowMetricsCalculator,androidx.window.layout.WindowBackend)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void registerPlugin(java.lang.String,io.flutter.plugins.firebase.core.FlutterFirebasePlugin)
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType[] values()
io.flutter.embedding.engine.FlutterJNI: boolean nativeGetIsSoftwareRenderingEnabled()
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
androidx.window.layout.FoldingFeature$State: java.lang.String toString()
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int)
com.google.android.gms.internal.measurement.zzfz: zzfz()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setMediaStyle(androidx.core.app.NotificationCompat$Builder)
androidx.window.layout.WindowInfoTracker$Companion: void reset()
com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType: com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType[] values()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.window.layout.WindowInfoTracker$-CC: void overrideDecorator(androidx.window.layout.WindowInfoTrackerDecorator)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)
io.flutter.embedding.engine.FlutterJNI: long performNativeAttach(io.flutter.embedding.engine.FlutterJNI)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setWebAuthnSupport(int)
androidx.window.embedding.SplitRuleParser: android.content.ComponentName buildClassName(java.lang.String,java.lang.CharSequence)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder addPerson(android.app.Notification$Builder,java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: android.net.Uri getSafeBrowsingPrivacyPolicyUrl()
androidx.window.embedding.EmbeddingBackend: boolean isSplitSupported()
com.google.firebase.datatransport.TransportRegistrar: java.util.List getComponents()
androidx.core.app.NotificationCompat$BigPictureStyle$Api23Impl: void setBigLargeIcon(android.app.Notification$BigPictureStyle,android.graphics.drawable.Icon)
com.google.android.gms.internal.measurement.zzgl: zzgl()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getSessionId(com.google.android.gms.internal.measurement.zzcf)
kotlinx.coroutines.CancelHandlerBase: CancelHandlerBase()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: ImeSyncDeferringInsetsCallback(android.view.View)
androidx.window.layout.DisplayCompatHelperApi17: DisplayCompatHelperApi17()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertSettings(android.webkit.WebSettings)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingInitProvider: FlutterFirebaseMessagingInitProvider()
com.dexterous.flutterlocalnotifications.models.SoundSource: com.dexterous.flutterlocalnotifications.models.SoundSource valueOf(java.lang.String)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: ExtensionWindowLayoutInfoBackend$MulticastConsumer(android.app.Activity)
androidx.window.embedding.SplitController$Companion: SplitController$Companion()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void removeNotificationFromCache(android.content.Context,java.lang.Integer)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
androidx.window.layout.WindowMetricsCalculator$-CC: androidx.window.layout.WindowMetricsCalculator getOrCreate()
com.google.firebase.analytics.FirebaseAnalytics: void setCurrentScreen(android.app.Activity,java.lang.String,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemGestureInsets()
androidx.window.embedding.SplitPairRule: boolean getClearTop()
io.flutter.embedding.engine.FlutterJNI: void setAsyncWaitForVsyncDelegate(io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean hasInvalidBigPictureResources(io.flutter.plugin.common.MethodChannel$Result,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
androidx.window.layout.WindowLayoutInfo: boolean equals(java.lang.Object)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
androidx.webkit.internal.ApiHelperForO: android.content.pm.PackageInfo getCurrentWebViewPackage()
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason valueOf(java.lang.String)
androidx.window.layout.SidecarAdapter$Companion: SidecarAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebViewPoint: GeneratedAndroidWebView$WebViewPoint()
androidx.webkit.internal.ApiHelperForM: boolean getOffscreenPreRaster(android.webkit.WebSettings)
kotlinx.coroutines.ExecutorCoroutineDispatcher: ExecutorCoroutineDispatcher()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: byte[] castObjectToByteArray(java.lang.Object)
androidx.core.app.NotificationCompat$MessagingStyle$Api16Impl: android.app.Notification$BigTextStyle bigText(android.app.Notification$BigTextStyle,java.lang.CharSequence)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setBigPictureStyle(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.core.app.NotificationCompat$BigPictureStyle$Api31Impl: void setBigPicture(android.app.Notification$BigPictureStyle,android.graphics.drawable.Icon)
com.dexterous.flutterlocalnotifications.ScheduledNotificationBootReceiver: ScheduledNotificationBootReceiver()
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterTexture(long,long,java.lang.ref.WeakReference)
androidx.media.AudioAttributesImplApi26: AudioAttributesImplApi26()
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation valueOf(java.lang.String)
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void registerOnMeasurementEventListener(com.google.android.gms.internal.measurement.zzci)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void showNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
androidx.media.AudioAttributesImplApi21Parcelizer: androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebResourceRequest(android.webkit.WebResourceRequest)
com.google.gson.JsonObject: JsonObject()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getUserProperties(java.lang.String,java.lang.String,boolean,com.google.android.gms.internal.measurement.zzcf)
com.google.android.gms.common.api.internal.zzd: zzd()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setMinimumSessionDuration(long)
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageEmptyResponseCallback(long,int)
androidx.window.core.Version: int getPatch()
androidx.window.layout.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerAdded(android.app.Activity)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityPredicates(java.util.Set)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable getReflected()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean hasInvalidRawSoundResource(io.flutter.plugin.common.MethodChannel$Result,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
com.google.gson.reflect.TypeToken: TypeToken()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar: GlobalLibraryVersionRegistrar()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getAppInstanceId(com.google.android.gms.internal.measurement.zzcf)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action$Builder addExtras(android.app.Notification$Action$Builder,android.os.Bundle)
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType valueOf(java.lang.String)
androidx.window.layout.SidecarCompat: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface access$getExtensionCallback$p(androidx.window.layout.SidecarCompat)
com.google.android.gms.internal.measurement.zzer: zzer()
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29)
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval[] values()
androidx.window.embedding.SplitInfo: boolean equals(java.lang.Object)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onDetachedFromActivityForConfigChanges()
com.google.android.datatransport.cct.internal.AndroidClientInfo: AndroidClientInfo()
com.google.android.gms.stats.zzc: zzc()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityIntentPredicates$lambda-3(androidx.window.embedding.EmbeddingAdapter,java.util.Set,android.util.Pair)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] values()
com.google.android.gms.common.api.internal.BasePendingResult: BasePendingResult()
com.dexterous.flutterlocalnotifications.RepeatInterval: com.dexterous.flutterlocalnotifications.RepeatInterval valueOf(java.lang.String)
com.google.firebase.installations.FirebaseInstallationsRegistrar: FirebaseInstallationsRegistrar()
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Builder setBubbleMetadata(android.app.Notification$Builder,android.app.Notification$BubbleMetadata)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readLargeIconInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect)
com.google.firebase.installations.FirebaseInstallationsRegistrar: java.util.List getComponents()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean hasInvalidIcon(io.flutter.plugin.common.MethodChannel$Result,java.lang.String)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] values()
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore: GeneratedAndroidFirebaseCore()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
androidx.core.text.ICUCompat$Api24Impl: android.icu.util.ULocale addLikelySubtags(java.lang.Object)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.util.HashMap getMappedNotificationChannel(android.app.NotificationChannel)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$WebViewPlatformView: android.view.View getView()
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformView getView()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readPlatformSpecifics(java.util.Map,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
androidx.window.layout.ExtensionInterfaceCompat: boolean validateExtensionInterface()
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$WebViewPlatformView: void setApi(io.flutter.plugins.webviewflutter.WebViewFlutterApiImpl)
androidx.window.layout.SidecarWindowBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.core.view.ViewCompat$Api23Impl: int getScrollIndicators(android.view.View)
androidx.core.app.AppOpsManagerCompat$Api29Impl: java.lang.String getOpPackageName(android.content.Context)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int)
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$700(io.flutter.embedding.android.FlutterSplashView$SavedState)
androidx.window.embedding.SplitController$Companion: SplitController$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getResId(java.lang.Object)
com.google.firebase.FirebaseCommonRegistrar: FirebaseCommonRegistrar()
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodesTranslateBounds(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect,android.view.accessibility.AccessibilityNodeInfo)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType()
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View,int,int,int,int)
androidx.core.app.NotificationManagerCompat$Api26Impl: java.util.List getNotificationChannelGroups(android.app.NotificationManager)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsIceCreamSandwich$window_release(android.app.Activity)
androidx.window.embedding.SplitRule: boolean checkParentMetrics(android.view.WindowMetrics)
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void initialize(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.internal.measurement.zzcl,long)
androidx.window.core.Bounds: boolean equals(java.lang.Object)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: SidecarWindowBackend$WindowLayoutChangeCallbackWrapper(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.window.embedding.ActivityStack: ActivityStack(java.util.List,boolean)
androidx.window.embedding.SplitController: SplitController()
androidx.window.core.Version: int compareTo(androidx.window.core.Version)
com.google.firebase.installations.remote.InstallationResponse: InstallationResponse()
com.google.android.datatransport.Event: Event()
androidx.window.embedding.SplitPairRule: boolean equals(java.lang.Object)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetBottom(android.view.DisplayCutout)
androidx.window.layout.ExtensionWindowLayoutInfoBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
com.google.android.gms.common.api.internal.zzb: zzb()
kotlinx.coroutines.CoroutineDispatcher: CoroutineDispatcher()
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: FragmentTransition$FragmentContainerTransition()
io.flutter.embedding.engine.FlutterJNI: void unregisterTexture(long)
com.dexterous.flutterlocalnotifications.models.IconSource: IconSource(java.lang.String,int)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$Orientation getOrientation()
com.google.android.gms.internal.measurement.zzlx: zzlx()
com.google.android.datatransport.cct.internal.LogRequest: LogRequest()
androidx.media.AudioAttributesImplApi26Parcelizer: androidx.media.AudioAttributesImplApi26 read(androidx.versionedparcelable.VersionedParcel)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.util.Map describeIcon(androidx.core.graphics.drawable.IconCompat)
androidx.core.app.NotificationCompat$BigTextStyle$Api16Impl: android.app.Notification$BigTextStyle bigText(android.app.Notification$BigTextStyle,java.lang.CharSequence)
androidx.window.layout.WindowBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setSessionTimeoutDuration(long)
com.google.android.gms.internal.measurement.zzgg: zzgg()
io.flutter.plugins.GeneratedPluginRegistrant: GeneratedPluginRegistrant()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setAlgorithmicDarkeningAllowed(boolean)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
io.flutter.plugin.platform.SingleViewPresentation: void onCreate(android.os.Bundle)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: androidx.core.graphics.drawable.IconCompat getIconFromSource(android.content.Context,java.lang.Object,com.dexterous.flutterlocalnotifications.models.IconSource)
io.flutter.view.AccessibilityViewEmbedder: AccessibilityViewEmbedder(android.view.View,int)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifier(int)
io.flutter.view.AccessibilityViewEmbedder: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.core.app.NotificationCompatBuilder$Api20Impl: java.lang.String getGroup(android.app.Notification)
androidx.window.layout.WindowInfoTracker$Companion: WindowInfoTracker$Companion()
androidx.versionedparcelable.ParcelUtils: ParcelUtils()
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.ActivityRule parseSplitActivityRule(android.content.Context,android.content.res.XmlResourceParser)
org.chromium.support_lib_boundary.ScriptHandlerBoundaryInterface: void remove()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void repeat(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.google.firebase.iid.Registrar: com.google.firebase.iid.internal.FirebaseInstanceIdInternal lambda$getComponents$1$Registrar(com.google.firebase.components.ComponentContainer)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable computeReflected()
androidx.webkit.internal.ApiHelperForOMR1: void startSafeBrowsing(android.content.Context,android.webkit.ValueCallback)
android.support.v4.media.AudioAttributesImplBaseParcelizer: AudioAttributesImplBaseParcelizer()
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Icon toIcon(androidx.core.graphics.drawable.IconCompat,android.content.Context)
androidx.core.app.AppOpsManagerCompat$Api29Impl: int checkOpNoThrow(android.app.AppOpsManager,java.lang.String,int,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityFeatures(int)
com.google.android.gms.internal.measurement.zzlc: zzlc()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertCookieManager(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeSetAccessibilityFeatures(long,int)
androidx.core.app.RemoteInput$Api16Impl: void setClipData(android.content.Intent,android.content.ClipData)
androidx.core.app.NotificationManagerCompat$Api26Impl: java.util.List getNotificationChannels(android.app.NotificationManager)
androidx.window.embedding.EmbeddingAdapter: java.lang.Object component1(android.util.Pair)
androidx.window.layout.WindowLayoutInfo: WindowLayoutInfo(java.util.List)
org.chromium.support_lib_boundary.FeatureFlagHolderBoundaryInterface: java.lang.String[] getSupportedFeatures()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.lifecycle.ViewModelProvider$KeyedFactory: ViewModelProvider$KeyedFactory()
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
androidx.window.embedding.SplitRuleParser: SplitRuleParser()
androidx.core.view.ViewCompat$Api21Impl: void setNestedScrollingEnabled(android.view.View,boolean)
io.flutter.embedding.engine.FlutterJNI: void nativeDeferredComponentInstallFailure(int,java.lang.String,boolean)
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConsent(android.os.Bundle,long)
androidx.window.embedding.ActivityRule: androidx.window.embedding.ActivityRule plus$window_release(androidx.window.embedding.ActivityFilter)
com.google.android.gms.internal.measurement.zzc: zzc()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getTappableElementInsets()
com.google.android.datatransport.cct.internal.LogResponse: LogResponse()
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageResponseCallback(int,java.nio.ByteBuffer,int)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
kotlinx.coroutines.channels.Receive: Receive()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertWebResourceError(java.lang.reflect.InvocationHandler)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type getType$window_release()
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setPublicVersion(android.app.Notification$Builder,android.app.Notification)
com.google.android.gms.internal.measurement.zzey: zzey()
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag valueOf(java.lang.String)
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Class,java.lang.String,java.lang.String,int)
androidx.window.embedding.ExtensionEmbeddingBackend: void unregisterSplitListenerForActivity(androidx.core.util.Consumer)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.content.ContextCompat$Api28Impl: java.util.concurrent.Executor getMainExecutor(android.content.Context)
io.flutter.embedding.engine.FlutterJNI: void deferredComponentInstallFailure(int,java.lang.String,boolean)
androidx.window.layout.FoldingFeature$State$Companion: FoldingFeature$State$Companion()
io.flutter.embedding.engine.FlutterJNI: long nativeAttach(io.flutter.embedding.engine.FlutterJNI)
androidx.core.view.WindowInsetsCompat$Impl: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle getLifecycle()
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State getState()
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] values()
io.flutter.embedding.engine.FlutterJNI: void prefetchDefaultFontManager()
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
androidx.window.layout.ExtensionWindowLayoutInfoBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.google.firebase.messaging.FirebaseMessagingRegistrar: FirebaseMessagingRegistrar()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onDetachedFromActivity()
org.chromium.support_lib_boundary.WebMessageBoundaryInterface: java.lang.String getData()
androidx.window.embedding.SplitRule: SplitRule(int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.FlutterJNI: void requestDartDeferredLibrary(int)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemGestureInsets(androidx.core.graphics.Insets)
kotlinx.coroutines.JobNode: JobNode()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler getWebViewRendererClient()
androidx.core.app.NotificationCompat$MessagingStyle$Api24Impl: android.app.Notification$MessagingStyle setConversationTitle(android.app.Notification$MessagingStyle,java.lang.CharSequence)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept(java.util.List)
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface: java.lang.String getAsString()
com.google.firebase.installations.FirebaseInstallationsRegistrar: com.google.firebase.installations.FirebaseInstallationsApi lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void getActiveNotifications(io.flutter.plugin.common.MethodChannel$Result)
com.google.android.gms.internal.measurement.zzfr: zzfr()
androidx.window.java.R: R()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService: FlutterFirebaseMessagingBackgroundService()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void getCallbackHandle(io.flutter.plugin.common.MethodChannel$Result)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
com.google.gson.JsonArray: JsonArray()
androidx.core.app.NotificationCompat$MessagingStyle$Message$Api24Impl: android.app.Notification$MessagingStyle$Message setData(android.app.Notification$MessagingStyle$Message,java.lang.String,android.net.Uri)
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface: java.lang.CharSequence getDescription()
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides valueOf(java.lang.String)
io.flutter.plugins.webviewflutter.JavaScriptChannel: void postMessage(java.lang.String)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] values()
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.ExtensionEmbeddingBackend getInstance()
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void clearConditionalUserProperty(java.lang.String,java.lang.String,android.os.Bundle)
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: android.app.Notification$CallStyle setDeclineButtonColorHint(android.app.Notification$CallStyle,int)
androidx.window.embedding.SplitPairRule: SplitPairRule(java.util.Set,boolean,boolean,boolean,int,int,float,int)
androidx.core.app.ActivityCompat$Api23Impl: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: boolean isVisible(int)
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: AbstractResolvableFuture$Waiter()
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
io.flutter.embedding.engine.FlutterJNI: void onBeginFrame()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
androidx.core.content.ContextCompat$Api23Impl: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)
io.flutter.view.AccessibilityViewEmbedder: void cacheVirtualIdMappings(android.view.View,int,int)
com.google.android.gms.internal.measurement.zzbn: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getDropDataProvider()
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState detachState()
io.flutter.embedding.engine.FlutterJNI: void runBundleAndSnapshotFromLibrary(java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
androidx.window.layout.WindowMetricsCalculator$-CC: void overrideDecorator(androidx.window.layout.WindowMetricsCalculatorDecorator)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.ActivityFilter parseActivityFilter(android.content.Context,android.content.res.XmlResourceParser)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsetsAnimation$Callback getAnimationCallback()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getInsets(int)
com.dexterous.flutterlocalnotifications.models.PersonDetails: PersonDetails(java.lang.Boolean,java.lang.Object,com.dexterous.flutterlocalnotifications.models.IconSource,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarWindowLayoutInfo(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarWindowLayoutInfo)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.Boolean canCreateNotificationChannel(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails)
com.google.android.gms.common.api.PendingResult: PendingResult()
androidx.lifecycle.ViewModel: ViewModel()
androidx.window.layout.WindowMetricsCalculator$Companion: void reset()
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype valueOf(java.lang.String)
androidx.webkit.internal.ApiHelperForM: java.lang.CharSequence getDescription(android.webkit.WebResourceError)
io.flutter.embedding.android.FlutterView: io.flutter.plugin.common.BinaryMessenger getBinaryMessenger()
androidx.window.layout.SidecarWindowBackend: void callbackRemovedForActivity(android.app.Activity)
androidx.core.app.NotificationCompatBuilder$Api16Impl: android.app.Notification$Builder setSubText(android.app.Notification$Builder,java.lang.CharSequence)
androidx.window.core.Version$bigInteger$2: java.math.BigInteger invoke()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: android.graphics.Matrix getPlatformViewMatrix()
androidx.window.core.Bounds: boolean isEmpty()
androidx.window.layout.SidecarAdapter$Companion: void setSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState,int)
androidx.core.app.NotificationManagerCompat$Api26Impl: void createNotificationChannels(android.app.NotificationManager,java.util.List)
androidx.window.layout.FoldingFeature: boolean isSeparating()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity getActivity()
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.google.android.gms.tasks.TaskCompletionSource: TaskCompletionSource()
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity)
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode valueOf(java.lang.String)
androidx.window.embedding.SplitPairRule: int hashCode()
kotlin.jvm.internal.CallableReference: boolean isFinal()
androidx.window.core.Version: androidx.window.core.Version parse(java.lang.String)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetRight(android.view.DisplayCutout)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] values()
androidx.window.embedding.ExtensionEmbeddingBackend: void getSplitChangeCallbacks$annotations()
io.flutter.embedding.engine.FlutterJNI: void init(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
androidx.core.view.ViewCompat$Api23Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
com.google.firebase.analytics.ktx.FirebaseAnalyticsKtxRegistrar: FirebaseAnalyticsKtxRegistrar()
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory registerSubtype(java.lang.Class,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
com.google.android.gms.internal.measurement.zzgj: zzgj()
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType valueOf(java.lang.String)
androidx.core.app.NotificationManagerCompat$Api24Impl: boolean areNotificationsEnabled(android.app.NotificationManager)
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$Orientation getOrientation()
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$602(io.flutter.embedding.android.FlutterSplashView$SavedState,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void unregisterOnMeasurementEventListener(com.google.android.gms.internal.measurement.zzci)
io.flutter.plugins.firebase.messaging.JobIntentService: JobIntentService()
com.google.android.gms.internal.measurement.zzfn: zzfn()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: boolean onWebAuthnIntent(android.webkit.WebView,android.app.PendingIntent,java.lang.reflect.InvocationHandler)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setVisibility(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
kotlinx.coroutines.android.AndroidDispatcherFactory: int getLoadPriority()
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status valueOf(java.lang.String)
androidx.core.app.NotificationCompat$BigPictureStyle$Api16Impl: android.app.Notification$BigPictureStyle createBigPictureStyle(android.app.Notification$Builder)
androidx.window.core.Version: Version(int,int,int,java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable computeReflected()
androidx.core.app.RemoteInput$Api20Impl: android.os.Bundle getResultsFromIntent(android.content.Intent)
com.google.android.gms.internal.measurement.zzki: zzki()
androidx.core.view.ViewCompat$Api21Impl: boolean startNestedScroll(android.view.View,int)
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: SchedulerConfig()
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Action$Builder setContextual(android.app.Notification$Action$Builder,boolean)
androidx.window.layout.WindowInfoTracker$-CC: void reset()
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setSortKey(android.app.Notification$Builder,java.lang.String)
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity)
androidx.webkit.internal.ApiHelperForOMR1: void backToSafety(android.webkit.SafeBrowsingResponse,boolean)
androidx.window.layout.FoldingFeature$OcclusionType$Companion: FoldingFeature$OcclusionType$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: java.lang.String[] computePlatformResolvedLocale(java.lang.String[])
androidx.core.view.ViewCompat$Api19Impl: boolean isAttachedToWindow(android.view.View)
io.flutter.embedding.engine.FlutterJNI: void loadLibrary()
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
androidx.window.layout.HardwareFoldingFeature$Companion: void validateFeatureBounds$window_release(androidx.window.core.Bounds)
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setStableInsets(androidx.core.graphics.Insets)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void endAdUnitExposure(java.lang.String,long)
androidx.core.view.DisplayCutoutCompat$Api28Impl: java.util.List getBoundingRects(android.view.DisplayCutout)
androidx.legacy.content.WakefulBroadcastReceiver: WakefulBroadcastReceiver()
androidx.core.app.RemoteInput$Api29Impl: int getEditChoicesBeforeSending(java.lang.Object)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: ExtensionEmbeddingBackend$Companion()
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDisplayFeature(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDisplayFeature)
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void proceed(boolean)
com.google.android.gms.internal.measurement.zzkv: zzkv()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean launchedActivityFromHistory(android.content.Intent)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: BaseContinuationImpl(kotlin.coroutines.Continuation)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: ExtensionEmbeddingBackend$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.gms.internal.measurement.zzhb: zzhb()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivitySaveInstanceState(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.internal.measurement.zzcf,long)
androidx.core.app.NotificationCompat$MessagingStyle: NotificationCompat$MessagingStyle()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void pendingNotificationRequests(io.flutter.plugin.common.MethodChannel$Result)
androidx.window.core.Bounds: Bounds(android.graphics.Rect)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void createNotificationChannel(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.firebase.iid.FirebaseInstanceId: com.google.firebase.iid.FirebaseInstanceId getInstance(com.google.firebase.FirebaseApp)
androidx.window.embedding.EmbeddingCompat$Companion: java.lang.Integer getExtensionApiLevel()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler getWebViewRenderer()
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: SidecarCompat$DistinctSidecarElementCallback(androidx.window.layout.SidecarAdapter,androidx.window.sidecar.SidecarInterface$SidecarCallback)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setGroupSummary(android.app.Notification$Builder,boolean)
androidx.core.content.ContextCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status[] values()
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: android.app.Notification$CallStyle forIncomingCall(android.app.Person,android.app.PendingIntent,android.app.PendingIntent)
androidx.media.AudioAttributesCompat: AudioAttributesCompat()
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: void setLastInfo(java.util.List)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsForType(int,boolean)
androidx.window.embedding.SplitInfo: boolean contains(android.app.Activity)
org.chromium.support_lib_boundary.WebViewRendererClientBoundaryInterface: void onRendererUnresponsive(android.webkit.WebView,java.lang.reflect.InvocationHandler)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void install()
androidx.window.embedding.EmbeddingBackend: void setSplitRules(java.util.Set)
io.flutter.embedding.engine.FlutterJNI: void onDisplayOverlaySurface(int,int,int,int,int)
androidx.window.embedding.SplitRule: SplitRule()
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: java.lang.Object invoke(java.lang.Object)
androidx.core.graphics.Insets$Api29Impl: android.graphics.Insets of(int,int,int,int)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void accept(androidx.window.extensions.layout.WindowLayoutInfo)
androidx.core.app.ActivityCompat$Api23Impl: void requestPermissions(android.app.Activity,java.lang.String[],int)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getDisabledActionModeMenuItems()
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents valueOf(java.lang.String)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.models.styles.StyleInformation: StyleInformation()
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Action$Builder setAllowGeneratedReplies(android.app.Notification$Action$Builder,boolean)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)
io.flutter.embedding.engine.FlutterJNI: void detachFromNativeAndReleaseResources()
androidx.window.layout.SidecarCompat$DistinctElementCallback: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$ImeVisibleListener access$500(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: android.app.Notification$CallStyle setVerificationIcon(android.app.Notification$CallStyle,android.graphics.drawable.Icon)
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getDefault()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void getTransformMatrix(float[])
kotlinx.coroutines.android.HandlerDispatcher: HandlerDispatcher()
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetLeft(android.view.DisplayCutout)
androidx.core.view.ViewCompat$Api16Impl: int getImportantForAccessibility(android.view.View)
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setCustomContentView(android.app.Notification$Builder,android.widget.RemoteViews)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetBottom(android.view.DisplayCutout)
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
com.google.android.gms.internal.measurement.zzha: zzha()
io.flutter.embedding.engine.FlutterJNI: void updateJavaAssetManager(android.content.res.AssetManager,java.lang.String)
androidx.core.view.ViewCompat$Api19Impl: void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)
kotlin.jvm.internal.FunctionReference: int hashCode()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
androidx.window.layout.WindowMetricsCalculator$Companion: WindowMetricsCalculator$Companion()
com.google.firebase.encoders.proto.Protobuf$IntEncoding: com.google.firebase.encoders.proto.Protobuf$IntEncoding valueOf(java.lang.String)
androidx.webkit.internal.ApiHelperForM: void postWebMessage(android.webkit.WebView,android.webkit.WebMessage,android.net.Uri)
com.google.android.gms.measurement.AppMeasurement: java.util.Map getUserProperties(java.lang.String,java.lang.String,boolean)
androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
com.google.firebase.datatransport.TransportRegistrar: com.google.android.datatransport.TransportFactory lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
com.google.android.gms.measurement.AppMeasurement: void clearConditionalUserProperty(java.lang.String,java.lang.String,android.os.Bundle)
androidx.core.content.FileProvider: FileProvider()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$600(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setDefaultEventParameters(android.os.Bundle)
io.flutter.embedding.android.FlutterTextureView: void setRenderSurface(android.view.Surface)
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: com.dexterous.flutterlocalnotifications.models.NotificationDetails extractNotificationDetails(io.flutter.plugin.common.MethodChannel$Result,java.util.Map)
androidx.window.embedding.EmbeddingCompat: void setEmbeddingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface)
androidx.window.layout.EmptyDecorator: EmptyDecorator()
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemWindowInsets(androidx.core.graphics.Insets)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: android.view.WindowInsets onProgress(android.view.WindowInsets,java.util.List)
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface: void start(int,java.util.Collection,int)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void isDataCollectionEnabled(com.google.android.gms.internal.measurement.zzcf)
com.dexterous.flutterlocalnotifications.models.SoundSource: com.dexterous.flutterlocalnotifications.models.SoundSource[] values()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setForceDark(int)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertSafeBrowsingResponse(java.lang.reflect.InvocationHandler)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCachedAppInstanceId(com.google.android.gms.internal.measurement.zzcf)
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility[] values()
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setBadgeIconType(android.app.Notification$Builder,int)
androidx.window.layout.WindowMetricsCalculator$-CC: void reset()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readProgressInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle$Api15Impl: void setContentDescription(android.widget.RemoteViews,int,java.lang.CharSequence)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode[] values()
com.dexterous.flutterlocalnotifications.models.Time: Time()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
io.flutter.view.FlutterCallbackInformation: FlutterCallbackInformation(java.lang.String,java.lang.String,java.lang.String)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readChannelInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] values()
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable getReflected()
org.chromium.support_lib_boundary.WebMessageCallbackBoundaryInterface: void onMessage(java.lang.reflect.InvocationHandler,java.lang.reflect.InvocationHandler)
kotlinx.coroutines.EventLoopImplBase: EventLoopImplBase()
androidx.webkit.internal.ApiHelperForP: java.lang.ClassLoader getWebViewClassLoader()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept(androidx.window.layout.WindowLayoutInfo)
androidx.window.core.Bounds: int getHeight()
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: NotificationChannelGroupDetails()
androidx.media.AudioAttributesCompatParcelizer: AudioAttributesCompatParcelizer()
androidx.window.layout.SidecarCompat$FirstAttachAdapter: void onViewAttachedToWindow(android.view.View)
io.flutter.embedding.engine.FlutterEngineGroupCache: FlutterEngineGroupCache()
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.webkit.internal.ApiHelperForM: android.webkit.WebMessage createWebMessage(androidx.webkit.WebMessageCompat)
io.flutter.embedding.engine.FlutterJNI: void dispatchPlatformMessage(java.lang.String,java.nio.ByteBuffer,int,int)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setWillSuppressErrorPage(boolean)
androidx.window.embedding.SplitController: void unregisterRule(androidx.window.embedding.EmbeddingRule)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI nativeSpawn(long,java.lang.String,java.lang.String,java.lang.String,java.util.List)
androidx.window.embedding.EmbeddingAdapter: EmbeddingAdapter()
dev.fluttercommunity.plus.share.SharePlusPendingIntent: SharePlusPendingIntent()
com.google.android.gms.internal.measurement.zzgk: zzgk()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setProgress(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.core.view.ViewCompat$Api28Impl: void setScreenReaderFocusable(android.view.View,boolean)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getOffscreenPreRaster()
kotlin.jvm.internal.ReflectionFactory: ReflectionFactory()
androidx.window.embedding.SplitController$Companion: void initialize(android.content.Context,int)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setAllowFileAccess(boolean)
com.google.android.gms.internal.measurement.zzii: zzii()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KType getReturnType()
androidx.core.app.NotificationCompat$CallStyle$Api24Impl: android.app.Notification$Action$Builder setAllowGeneratedReplies(android.app.Notification$Action$Builder,boolean)
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: NotificationChannelDetails()
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface: void clearProxyOverride(java.lang.Runnable,java.util.concurrent.Executor)
androidx.core.os.ConfigurationCompat$Api24Impl: android.os.LocaleList getLocales(android.content.res.Configuration)
androidx.core.content.ContextCompat$Api24Impl: java.io.File getDataDir(android.content.Context)
com.google.android.gms.internal.measurement.zzet: zzet()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: com.google.gson.Gson buildGson()
androidx.webkit.internal.ApiHelperForOMR1: void proceed(android.webkit.SafeBrowsingResponse,boolean)
io.flutter.view.AccessibilityViewEmbedder: boolean onAccessibilityHoverEvent(int,android.view.MotionEvent)
androidx.core.app.ActivityCompat$Api16Impl: void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
androidx.core.view.ViewCompat$Api19Impl: boolean isLayoutDirectionResolved(android.view.View)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation getCompletion()
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$WebResourceErrorData: GeneratedAndroidWebView$WebResourceErrorData()
kotlinx.coroutines.EventLoop: EventLoop()
com.google.gson.JsonNull: JsonNull()
com.google.gson.TypeAdapter: TypeAdapter()
androidx.core.app.Person$Api28Impl: androidx.core.app.Person fromAndroidPerson(android.app.Person)
androidx.window.layout.SidecarCompat: void register(android.os.IBinder,android.app.Activity)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsQ$window_release(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void markTextureFrameAvailable(long)
io.flutter.embedding.engine.FlutterJNI: void attachToNative()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$102(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCurrentScreenName(com.google.android.gms.internal.measurement.zzcf)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo: NetworkConnectionInfo()
kotlinx.coroutines.NodeList: NodeList()
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$State getState()
com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform: com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform valueOf(java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setInstanceIdProvider(com.google.android.gms.internal.measurement.zzck)
androidx.window.layout.SidecarCompat$TranslatingCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
androidx.window.layout.SidecarAdapter$Companion: java.util.List getSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo)
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery: TransportBackendDiscovery()
androidx.core.app.NotificationCompat$Style$Api16Impl: void setViewPadding(android.widget.RemoteViews,int,int,int,int,int)
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle$Api16Impl: android.app.Notification$Builder setStyle(android.app.Notification$Builder,java.lang.Object)
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus[] values()
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus valueOf(java.lang.String)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean isAlgorithmicDarkeningAllowed()
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetLeft(android.view.DisplayCutout)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype[] values()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPairRule parseSplitPairRule(android.content.Context,android.content.res.XmlResourceParser)
com.google.android.gms.measurement.AppMeasurement: void endAdUnitExposure(java.lang.String)
com.google.android.gms.measurement.AppMeasurement: void setConditionalUserProperty(com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty)
com.google.android.gms.internal.base.zac: zac()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setBigTextStyle(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
android.support.v4.media.AudioAttributesImplApi26Parcelizer: AudioAttributesImplApi26Parcelizer()
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointVariantSelector(int)
android.support.v4.media.AudioAttributesCompatParcelizer: void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void zonedScheduleNextNotificationMatchingDateComponents(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
androidx.window.layout.ActivityCompatHelperApi30: ActivityCompatHelperApi30()
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails from(java.util.Map)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setTappableElementInsets(androidx.core.graphics.Insets)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void getNotificationAppLaunchDetails(io.flutter.plugin.common.MethodChannel$Result)
com.google.android.datatransport.cct.internal.BatchedLogRequest: BatchedLogRequest()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logEvent(java.lang.String,java.lang.String,android.os.Bundle,boolean,boolean,long)
androidx.core.app.NotificationCompat$MessagingStyle$Api16Impl: android.app.Notification$BigTextStyle setBigContentTitle(android.app.Notification$BigTextStyle,java.lang.CharSequence)
androidx.window.layout.SidecarWindowBackend$Companion: boolean isSidecarVersionSupported(androidx.window.core.Version)
com.google.firebase.platforminfo.LibraryVersion: LibraryVersion()
com.dexterous.flutterlocalnotifications.utils.BooleanUtils: BooleanUtils()
io.flutter.embedding.engine.FlutterJNI: void nativeMarkTextureFrameAvailable(long,long)
androidx.core.view.ViewCompat$Api21Impl$1: ViewCompat$Api21Impl$1(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
io.flutter.embedding.engine.FlutterJNI: void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
com.google.firebase.messaging.threads.ThreadPriority: com.google.firebase.messaging.threads.ThreadPriority[] values()
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation: MessagingStyleInformation(com.dexterous.flutterlocalnotifications.models.PersonDetails,java.lang.String,java.lang.Boolean,java.util.ArrayList,java.lang.Boolean,java.lang.Boolean)
androidx.core.view.ViewCompat$Api28Impl: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: boolean isExtensionVersionSupported(java.lang.Integer)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateParentMetricsPredicate(androidx.window.embedding.SplitRule)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setSafeBrowsingEnabled(boolean)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreFling(android.view.View,float,float)
org.chromium.support_lib_boundary.WebViewCookieManagerBoundaryInterface: java.util.List getCookieInfo(java.lang.String)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept$lambda-0(androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper,androidx.window.layout.WindowLayoutInfo)
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getHINGE$cp()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void accept(java.lang.Object)
androidx.core.app.RemoteInput$Api26Impl: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)
androidx.core.content.ContextCompat$Api24Impl: boolean isDeviceProtectedStorage(android.content.Context)
com.google.android.gms.measurement.AppMeasurement: void logEventInternal(java.lang.String,java.lang.String,android.os.Bundle)
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar: FlutterFirebaseCoreRegistrar()
androidx.window.layout.FoldingFeature$Orientation$Companion: FoldingFeature$Orientation$Companion()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void scheduleNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.lang.Boolean)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setupNotificationChannel(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails)
com.google.android.gms.internal.measurement.zzoa: com.google.android.gms.internal.measurement.zzoa[] values()
io.flutter.embedding.android.FlutterSplashView$SavedState: void writeToParcel(android.os.Parcel,int)
androidx.core.app.RemoteInput$Api29Impl: android.app.RemoteInput$Builder setEditChoicesBeforeSending(android.app.RemoteInput$Builder,int)
androidx.core.view.ViewCompat$Api28Impl: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
com.google.android.gms.internal.measurement.zzfv: zzfv()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: AppMeasurementDynamiteService()
androidx.window.layout.SidecarWindowBackend$Companion: androidx.window.layout.ExtensionInterfaceCompat initAndVerifyExtension(android.content.Context)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getWebkitToCompatConverter()
androidx.window.embedding.SplitRule: int getMinWidth()
com.google.firebase.ktx.FirebaseCommonKtxRegistrar: FirebaseCommonKtxRegistrar()
com.dexterous.flutterlocalnotifications.NotificationStyle: com.dexterous.flutterlocalnotifications.NotificationStyle valueOf(java.lang.String)
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void postMessage(java.lang.reflect.InvocationHandler)
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
androidx.core.view.ViewCompat$Api21Impl: void setZ(android.view.View,float)
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getObbDirs(android.content.Context)
com.google.android.gms.internal.ads_identifier.zzc: zzc()
com.google.android.gms.internal.measurement.zzfd: zzfd()
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: java.lang.Object invoke(java.lang.Object)
androidx.window.embedding.SplitRule: int getLayoutDirection()
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow valueOf(java.lang.String)
androidx.window.layout.SidecarAdapter: androidx.window.layout.WindowLayoutInfo translate(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarDeviceState)
androidx.window.embedding.EmbeddingCompat$Companion: EmbeddingCompat$Companion()
kotlin.jvm.internal.FunctionReference: boolean isInfix()
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setForceDarkBehavior(int)
androidx.window.embedding.SplitController: void addSplitListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.core.app.NotificationCompat$BigPictureStyle$Api16Impl: void setSummaryText(android.app.Notification$BigPictureStyle,java.lang.CharSequence)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: int getCacheMode()
androidx.window.layout.WindowMetricsCalculator$Companion: void overrideDecorator(androidx.window.layout.WindowMetricsCalculatorDecorator)
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifierBase(int)
androidx.core.text.ICUCompat$Api21Impl: java.lang.String getScript(java.util.Locale)
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: DateTimeComponents(java.lang.String,int)
androidx.window.layout.FoldingFeature$Orientation$Companion: FoldingFeature$Orientation$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.embedding.SplitRule: SplitRule(int,int,float,int)
androidx.core.view.ViewCompat$Api21Impl$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.core.view.ViewCompat$Api21Impl: java.lang.String getTransitionName(android.view.View)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void setWebViewRendererClient(java.lang.reflect.InvocationHandler)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void rescheduleNotifications(android.content.Context)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void deleteNotificationChannel(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getTestFlag(com.google.android.gms.internal.measurement.zzcf,int)
androidx.window.core.Version: Version(int,int,int,java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$ImeVisibleListener getImeVisibleListener()
androidx.window.embedding.SplitPairRule: SplitPairRule(java.util.Set,boolean,boolean,boolean,int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: androidx.core.view.WindowInsetsCompat build()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: androidx.core.app.NotificationCompat$MessagingStyle$Message createMessage(android.content.Context,com.dexterous.flutterlocalnotifications.models.MessageDetails)
io.flutter.embedding.engine.FlutterJNI: void setLocalizationPlugin(io.flutter.plugin.localization.LocalizationPlugin)
androidx.window.core.Version: int getMajor()
androidx.core.view.WindowInsetsCompat$Impl20: void copyRootViewBounds(android.view.View)
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType[] values()
io.flutter.embedding.android.FlutterActivity: FlutterActivity()
androidx.core.app.NotificationCompat$Builder$Api21Impl: android.media.AudioAttributes build(android.media.AudioAttributes$Builder)
androidx.core.view.ViewCompat$Api16Impl: void requestFitSystemWindows(android.view.View)
androidx.window.layout.SidecarCompat: androidx.window.sidecar.SidecarInterface getSidecar()
com.google.android.gms.signin.internal.zaa: zaa()
io.flutter.plugins.GeneratedPluginRegistrant: void registerWith(io.flutter.embedding.engine.FlutterEngine)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void detachFromGLContext()
androidx.window.embedding.ActivityFilter: boolean matchesActivity(android.app.Activity)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setGroup(android.app.Notification$Builder,java.lang.String)
androidx.window.embedding.EmptyEmbeddingComponent: EmptyEmbeddingComponent()
com.google.android.gms.measurement.AppMeasurement: void beginAdUnitExposure(java.lang.String)
com.google.android.gms.internal.measurement.zzcb: zzcb()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.content.Intent getLaunchIntent(android.content.Context)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void attachToGLContext(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setSound(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
io.flutter.embedding.engine.FlutterJNI: void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmoji(int)
com.google.gson.internal.Excluder: Excluder()
androidx.window.layout.SidecarWindowBackend$Companion: void resetInstance()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo getLastInfo()
com.google.android.datatransport.runtime.ProtoEncoderDoNotUse: ProtoEncoderDoNotUse()
androidx.core.app.NotificationCompat$MessagingStyle$Api26Impl: android.app.Notification$MessagingStyle addHistoricMessage(android.app.Notification$MessagingStyle,android.app.Notification$MessagingStyle$Message)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: long calculateNextNotificationTrigger(long,long)
androidx.window.embedding.ActivityRule: ActivityRule(java.util.Set,boolean)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityHeading(android.view.View,boolean)
androidx.core.app.NotificationCompat$CallStyle$Api21Impl: android.app.Notification$Builder setCategory(android.app.Notification$Builder,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void onFirstFrame()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean hasInvalidLedDetails(io.flutter.plugin.common.MethodChannel$Result,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status[] values()
androidx.collection.ArraySet: ArraySet()
androidx.core.app.NotificationManagerCompat$Api26Impl: void deleteNotificationChannelGroup(android.app.NotificationManager,java.lang.String)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setOffscreenPreRaster(boolean)
androidx.core.view.WindowInsetsCompat$Impl: int hashCode()
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$ConsoleMessageLevel: io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$ConsoleMessageLevel[] values()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setLights(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setSound(android.app.Notification$Builder,android.net.Uri,java.lang.Object)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setCategory(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.window.embedding.EmbeddingBackend: void unregisterRule(androidx.window.embedding.EmbeddingRule)
io.flutter.embedding.engine.FlutterJNI: void setViewportMetrics(float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
androidx.core.view.WindowInsetsCompat$Impl20: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.PersonDetails readPersonDetails(java.util.Map)
androidx.core.view.ViewCompat$Api21Impl: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
androidx.core.view.WindowInsetsCompat$Impl21: boolean isConsumed()
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue: SchedulerConfig$ConfigValue()
com.google.firebase.installations.local.PersistedInstallationEntry: PersistedInstallationEntry()
androidx.webkit.internal.ApiHelperForOMR1: void setSafeBrowsingWhitelist(java.util.List,android.webkit.ValueCallback)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void show(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.dexterous.flutterlocalnotifications.NotificationStyle: NotificationStyle(java.lang.String,int)
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
androidx.core.app.NotificationCompat$Builder$Api21Impl: android.media.AudioAttributes$Builder setLegacyStreamType(android.media.AudioAttributes$Builder,int)
com.dexterous.flutterlocalnotifications.ScheduledNotificationReceiver: void onReceive(android.content.Context,android.content.Intent)
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException: GooglePlayServicesMissingManifestValueException()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
androidx.core.app.NotificationCompat$MessagingStyle$Message$Api24Impl: android.app.Notification$MessagingStyle$Message createMessage(java.lang.CharSequence,long,java.lang.CharSequence)
com.google.android.gms.internal.measurement.zzfu: zzfu()
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness valueOf(java.lang.String)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$WebViewPlatformView: void setWebViewClient(android.webkit.WebViewClient)
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction valueOf(java.lang.String)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertWebMessagePort(java.lang.reflect.InvocationHandler)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix getFinalMatrix()
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: void onDragEnd(boolean)
androidx.webkit.internal.ApiHelperForM: void close(android.webkit.WebMessagePort)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getWebAuthnSupport()
androidx.core.view.WindowInsetsCompat$Impl: WindowInsetsCompat$Impl(androidx.core.view.WindowInsetsCompat)
androidx.window.embedding.EmbeddingTranslatingCallback: void accept(java.lang.Object)
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean)
androidx.window.layout.SidecarWindowBackend$Companion: androidx.window.layout.SidecarWindowBackend getInstance(android.content.Context)
androidx.window.embedding.EmbeddingCompat: void setSplitRules(java.util.Set)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
io.flutter.plugins.webviewflutter.WebViewHostApiImpl$WebViewPlatformView: void setWebChromeClient(android.webkit.WebChromeClient)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
androidx.window.core.Version: java.math.BigInteger getBigInteger()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] values()
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory of(java.lang.Class)
io.flutter.embedding.engine.FlutterJNI: void setRefreshRateFPS(float)
io.flutter.plugins.urllauncher.Messages$WebViewOptions: Messages$WebViewOptions()
androidx.core.view.DisplayCutoutCompat$Api28Impl: android.view.DisplayCutout createDisplayCutout(android.graphics.Rect,java.util.List)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] values()
com.google.android.gms.measurement.AppMeasurementJobService: AppMeasurementJobService()
androidx.webkit.internal.ApiHelperForM: int getErrorCode(android.webkit.WebResourceError)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logEventAndBundle(java.lang.String,java.lang.String,android.os.Bundle,com.google.android.gms.internal.measurement.zzcf,long)
androidx.core.app.NotificationManagerCompat$Api26Impl: java.lang.String getId(android.app.NotificationChannelGroup)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setUserProperty(java.lang.String,java.lang.String,com.google.android.gms.dynamic.IObjectWrapper,boolean,long)
androidx.window.layout.FoldingFeature$State: FoldingFeature$State(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: android.app.Notification$CallStyle setAnswerButtonColorHint(android.app.Notification$CallStyle,int)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertServiceWorkerSettings(java.lang.Object)
androidx.window.embedding.ActivityFilter: boolean equals(java.lang.Object)
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetricsCalculator getOrCreate()
kotlinx.coroutines.MainCoroutineDispatcher: MainCoroutineDispatcher()
com.google.android.gms.internal.measurement.zzag: zzag()
androidx.core.text.ICUCompat$Api24Impl: java.lang.String getScript(java.lang.Object)
androidx.window.layout.FoldingFeature$OcclusionType: java.lang.String toString()
androidx.window.core.Bounds: int getTop()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void addListener(androidx.core.util.Consumer)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setStableInsets(androidx.core.graphics.Insets)
androidx.window.embedding.SplitPairFilter: boolean equals(java.lang.Object)
androidx.window.embedding.EmbeddingAdapter: boolean translateIntentPredicates$lambda-8(java.util.Set,android.content.Intent)
androidx.core.view.ViewCompat$Api16Impl: int getMinimumWidth(android.view.View)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler addDocumentStartJavaScript(java.lang.String,java.lang.String[])
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void enableRestrictSensitiveWebContent()
kotlin.jvm.internal.FunctionReference: java.lang.String toString()
androidx.window.core.Version: androidx.window.core.Version access$getCURRENT$cp()
androidx.window.layout.DisplayFeature: android.graphics.Rect getBounds()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType valueOf(java.lang.String)
androidx.core.view.ViewGroupCompat$Api21Impl: int getNestedScrollAxes(android.view.ViewGroup)
androidx.window.layout.SidecarCompat$Companion: SidecarCompat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.app.NotificationCompat$CallStyle$Api23Impl: android.app.Notification$Action$Builder createActionBuilder(android.graphics.drawable.Icon,java.lang.CharSequence,android.app.PendingIntent)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1(androidx.core.util.Consumer)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspot(android.graphics.drawable.Drawable,float,float)
androidx.core.app.NotificationCompat$BigPictureStyle$Api31Impl: void setContentDescription(android.app.Notification$BigPictureStyle,java.lang.CharSequence)
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: WindowMetricsCalculator$Companion$reset$1()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRRect(int,int,int,int,float[])
org.chromium.support_lib_boundary.WebViewRendererClientBoundaryInterface: void onRendererResponsive(android.webkit.WebView,java.lang.reflect.InvocationHandler)
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
io.flutter.embedding.engine.FlutterJNI: boolean isAttached()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConditionalUserProperty(android.os.Bundle,long)
io.flutter.embedding.engine.FlutterJNI: void nativeOnVsync(long,long,long)
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object)
kotlin.internal.jdk8.JDK8PlatformImplementations: JDK8PlatformImplementations()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getMaxUserProperties(java.lang.String,com.google.android.gms.internal.measurement.zzcf)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingReceiver: FlutterFirebaseMessagingReceiver()
androidx.fragment.app.FragmentManagerState: FragmentManagerState()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readSoundInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
androidx.core.app.NotificationCompat$MessagingStyle$Message$Api28Impl: android.app.Notification$MessagingStyle$Message createMessage(java.lang.CharSequence,long,android.app.Person)
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
io.flutter.embedding.engine.FlutterOverlaySurface: FlutterOverlaySurface(int,android.view.Surface)
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface: boolean stop(java.io.OutputStream,java.util.concurrent.Executor)
com.google.android.gms.internal.measurement.zzft: zzft()
androidx.core.view.ViewCompat$Api16Impl: android.view.ViewParent getParentForAccessibility(android.view.View)
com.google.android.gms.dynamite.zzn: zzn()
androidx.window.embedding.SplitController: boolean isSplitSupported()
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeStableInsets()
androidx.core.app.NotificationCompat$CallStyle$Api16Impl: void setBuilder(android.app.Notification$CallStyle,android.app.Notification$Builder)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setEnterpriseAuthenticationAppLinkPolicyEnabled(boolean)
kotlin.UninitializedPropertyAccessException: UninitializedPropertyAccessException()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String getNextFireDate(com.dexterous.flutterlocalnotifications.models.NotificationDetails)
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,boolean)
kotlin.jvm.internal.CallableReference: java.lang.String getSignature()
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getServiceWorkerController()
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action build(android.app.Notification$Action$Builder)
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface: void setProxyOverride(java.lang.String[][],java.lang.String[],java.lang.Runnable,java.util.concurrent.Executor)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Drawable loadDrawable(android.graphics.drawable.Icon,android.content.Context)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder createBuilder(android.content.Context,java.lang.String)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setLocalOnly(android.app.Notification$Builder,boolean)
androidx.core.view.ViewCompat$Api21Impl: float getElevation(android.view.View)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean isValidDrawableResource(android.content.Context,java.lang.String,io.flutter.plugin.common.MethodChannel$Result,java.lang.String)
androidx.core.app.NotificationManagerCompat$Api24Impl: int getImportance(android.app.NotificationManager)
androidx.core.app.NotificationCompat$BigPictureStyle$Api16Impl: android.app.Notification$BigPictureStyle bigPicture(android.app.Notification$BigPictureStyle,android.graphics.Bitmap)
com.google.android.datatransport.runtime.TransportContext: TransportContext()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.gson.JsonElement: JsonElement()
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
androidx.core.view.WindowInsetsCompat$Impl29: void setStableInsets(androidx.core.graphics.Insets)
androidx.window.embedding.EmbeddingBackend: void registerRule(androidx.window.embedding.EmbeddingRule)
com.google.android.datatransport.cct.CctBackendFactory: com.google.android.datatransport.runtime.backends.TransportBackend create(com.google.android.datatransport.runtime.backends.CreationContext)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getStableInsets()
androidx.webkit.internal.ApiHelperForM: void setWebMessageCallback(android.webkit.WebMessagePort,androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat,android.os.Handler)
androidx.core.content.ContextCompat$Api33Impl: android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int)
androidx.window.layout.SidecarWindowBackend$Companion: SidecarWindowBackend$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.core.Bounds: int getBottom()
com.google.firebase.installations.InstallationTokenResult: InstallationTokenResult()
androidx.window.embedding.SplitPairFilter: android.content.ComponentName getSecondaryActivityName()
androidx.webkit.internal.ApiHelperForO: android.webkit.WebChromeClient getWebChromeClient(android.webkit.WebView)
io.flutter.embedding.engine.FlutterJNI: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
kotlinx.coroutines.internal.LockFreeLinkedListHead: LockFreeLinkedListHead()
androidx.window.layout.WindowMetricsCalculatorDecorator: androidx.window.layout.WindowMetricsCalculator decorate(androidx.window.layout.WindowMetricsCalculator)
androidx.webkit.internal.ApiHelperForP: boolean stop(android.webkit.TracingController,java.io.OutputStream,java.util.concurrent.Executor)
androidx.core.app.NotificationCompat$BigTextStyle$Api16Impl: android.app.Notification$BigTextStyle setBigContentTitle(android.app.Notification$BigTextStyle,java.lang.CharSequence)
androidx.core.view.WindowInsetsCompat$Impl: void setOverriddenInsets(androidx.core.graphics.Insets[])
androidx.window.embedding.ActivityRule: boolean equals(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl30: void copyRootViewBounds(android.view.View)
androidx.window.R$id: R$id()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void areNotificationsEnabled(io.flutter.plugin.common.MethodChannel$Result)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void destroyOverlaySurfaces()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.Boolean sendNotificationPayloadMessage(android.content.Intent)
com.dexterous.flutterlocalnotifications.ForegroundService: ForegroundService()
androidx.window.embedding.EmbeddingCompat$Companion: EmbeddingCompat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.scheduling.SchedulerTimeSource: SchedulerTimeSource()
android.support.v4.media.AudioAttributesImplApi21Parcelizer: androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel)
androidx.window.layout.WindowMetricsCalculatorCompat: void getRectSizeFromDisplay(android.app.Activity,android.graphics.Rect)
androidx.core.view.ViewCompat$Api16Impl: void setHasTransientState(android.view.View,boolean)
com.google.firebase.concurrent.UiExecutor: com.google.firebase.concurrent.UiExecutor[] values()
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType()
com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType: com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType valueOf(java.lang.String)
androidx.window.embedding.EmbeddingAdapter: java.lang.Object component2(android.util.Pair)
androidx.core.view.WindowInsetsCompat$Impl28: boolean equals(java.lang.Object)
androidx.core.app.ActivityCompat$Api16Impl: void finishAffinity(android.app.Activity)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void cancelNotification(java.lang.Integer,java.lang.String)
kotlin.coroutines.jvm.internal.ContinuationImpl: void releaseIntercepted()
androidx.window.embedding.SplitPlaceholderRule: android.content.Intent getPlaceholderIntent()
com.google.firebase.iid.Registrar: Registrar()
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility valueOf(java.lang.String)
com.google.firebase.iid.Registrar: java.util.List getComponents()
io.flutter.embedding.engine.FlutterJNI: void cleanupMessageData(long)
io.flutter.embedding.engine.FlutterJNI: void onRenderingStopped()
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory registerSubtype(java.lang.Class)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getGmpAppId(com.google.android.gms.internal.measurement.zzcf)
com.google.android.datatransport.runtime.scheduling.persistence.PersistedEvent: PersistedEvent()
io.flutter.embedding.engine.FlutterJNI: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.window.layout.SidecarAdapter: java.lang.String access$getTAG$cp()
androidx.window.embedding.SplitRule: int getMinSmallestWidth()
androidx.window.embedding.ExtensionEmbeddingBackend: void registerSplitListenerForActivity(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsVariationSelector(int)
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar: java.util.List getComponents()
androidx.window.embedding.SplitController$Companion: androidx.window.embedding.SplitController getInstance()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void applyInsetTypes()
com.google.firebase.messaging.FirebaseMessaging: com.google.firebase.messaging.FirebaseMessaging getInstance(com.google.firebase.FirebaseApp)
com.google.android.gms.measurement.AppMeasurement: com.google.android.gms.measurement.AppMeasurement getInstance(android.content.Context)
androidx.core.app.NotificationCompat$CallStyle$Api24Impl: android.app.Notification$Builder clearActions(android.app.Notification$Builder)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: android.view.WindowInsets createWindowInsetsInstance()
androidx.core.util.ObjectsCompat$Api19Impl: boolean equals(java.lang.Object,java.lang.Object)
androidx.concurrent.futures.AbstractResolvableFuture: AbstractResolvableFuture()
androidx.window.embedding.SplitRuleParser: java.util.Set parseSplitXml(android.content.Context,int)
androidx.window.layout.FoldingFeature$Orientation: FoldingFeature$Orientation(java.lang.String)
androidx.window.core.Version$Companion: androidx.window.core.Version getCURRENT()
androidx.window.layout.SidecarCompat: void onWindowLayoutChangeListenerRemoved(android.app.Activity)
androidx.webkit.internal.ApiHelperForP: void start(android.webkit.TracingController,androidx.webkit.TracingConfig)
androidx.media.AudioAttributesImplBase: AudioAttributesImplBase()
com.google.firebase.encoders.proto.Protobuf$IntEncoding: com.google.firebase.encoders.proto.Protobuf$IntEncoding[] values()
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowBackend windowBackend$window_release(android.content.Context)
kotlin.jvm.internal.CallableReference: java.util.List getTypeParameters()
com.google.android.gms.internal.measurement.zzbo: zzbo()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void saveScheduledNotifications(android.content.Context,java.util.ArrayList)
com.google.firebase.installations.remote.TokenResult: TokenResult()
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setColorized(android.app.Notification$Builder,boolean)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.util.Map describePerson(androidx.core.app.Person)
androidx.window.embedding.SplitInfo: java.lang.String toString()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void zonedScheduleNextNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
androidx.core.app.RemoteInput$Api16Impl: android.content.ClipData getClipData(android.content.Intent)
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: android.app.Notification$Action$Builder setAuthenticationRequired(android.app.Notification$Action$Builder,boolean)
androidx.window.embedding.SplitPlaceholderRule: int hashCode()
androidx.core.app.Person$Api28Impl: android.app.Person toAndroidPerson(androidx.core.app.Person)
kotlin.jvm.internal.Intrinsics: Intrinsics()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readBigTextStyleInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map,com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setCurrentScreen(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,java.lang.String,long)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setVisibility(android.app.Notification$Builder,int)
androidx.core.view.ViewCompat$Api16Impl: boolean getFitsSystemWindows(android.view.View)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readStyleInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
com.google.android.gms.internal.measurement.zzem: zzem()
androidx.window.core.Version: androidx.window.core.Version access$getUNKNOWN$cp()
androidx.window.layout.WindowLayoutInfo: java.util.List getDisplayFeatures()
androidx.core.app.NotificationCompat$Style$Api16Impl: void setTextViewTextSize(android.widget.RemoteViews,int,int,float)
com.google.android.datatransport.runtime.backends.BackendRequest: BackendRequest()
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat[] values()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: java.util.Set getRequestedWithHeaderOriginAllowList()
androidx.core.view.ViewCompat$Api28Impl: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
com.google.android.gms.internal.measurement.zzjp: zzjp()
androidx.core.app.NotificationCompat$CallStyle$Api20Impl: android.app.Notification$Action$Builder addExtras(android.app.Notification$Action$Builder,android.os.Bundle)
androidx.core.app.NotificationCompat$CallStyle$Api20Impl: android.app.Notification$Action$Builder addRemoteInput(android.app.Notification$Action$Builder,android.app.RemoteInput)
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken[] values()
com.google.firebase.analytics.FirebaseAnalytics: java.lang.String getFirebaseInstanceId()
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: java.lang.Object invoke(java.lang.Object)
androidx.window.layout.WindowMetricsCalculatorCompat: android.view.DisplayCutout getCutoutForDisplay(android.view.Display)
com.google.android.gms.internal.measurement.zzeh: zzeh()
com.google.android.gms.internal.measurement.zznl: zznl()
com.google.firebase.messaging.reporting.MessagingClientEvent$Event: com.google.firebase.messaging.reporting.MessagingClientEvent$Event valueOf(java.lang.String)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType valueOf(java.lang.String)
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
androidx.window.layout.ActivityCompatHelperApi30: android.graphics.Rect currentWindowBounds(android.app.Activity)
androidx.window.embedding.EmbeddingCompat$Companion: androidx.window.extensions.embedding.ActivityEmbeddingComponent embeddingComponent()
androidx.window.layout.FoldingFeature$OcclusionType$Companion: FoldingFeature$OcclusionType$Companion()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void cancelAllNotifications(io.flutter.plugin.common.MethodChannel$Result)
com.google.android.datatransport.runtime.backends.CreationContext: CreationContext()
androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getHINGE()
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetTop(android.view.DisplayCutout)
androidx.core.view.ViewGroupCompat$Api21Impl: boolean isTransitionGroup(android.view.ViewGroup)
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: WindowInfoTrackerImpl$windowLayoutInfo$1(androidx.window.layout.WindowInfoTrackerImpl,android.app.Activity,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api16Impl: int getWindowSystemUiVisibility(android.view.View)
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList getSplitChangeCallbacks()
com.dexterous.flutterlocalnotifications.models.Time: com.dexterous.flutterlocalnotifications.models.Time from(java.util.Map)
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory valueOf(java.lang.String)
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag[] values()
androidx.core.view.WindowInsetsCompat$Impl: void setRootViewData(androidx.core.graphics.Insets)
org.chromium.support_lib_boundary.WebMessageBoundaryInterface: java.lang.reflect.InvocationHandler getMessagePayload()
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1(androidx.window.layout.SidecarCompat,android.app.Activity)
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface getSurface()
com.dexterous.flutterlocalnotifications.utils.StringUtils: StringUtils()
androidx.window.layout.SidecarCompat: SidecarCompat(androidx.window.sidecar.SidecarInterface,androidx.window.layout.SidecarAdapter)
androidx.window.embedding.SplitInfo: SplitInfo(androidx.window.embedding.ActivityStack,androidx.window.embedding.ActivityStack,float)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void insertVisualStateCallback(long,java.lang.reflect.InvocationHandler)
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: android.app.Notification$CallStyle setVerificationText(android.app.Notification$CallStyle,java.lang.CharSequence)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$302(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
androidx.core.app.NotificationCompat$Style$Api24Impl: void setChronometerCountDown(android.widget.RemoteViews,int,boolean)
androidx.core.app.NotificationCompat$CallStyle$Api21Impl: android.app.Notification$Builder addPerson(android.app.Notification$Builder,java.lang.String)
androidx.core.view.ViewCompat$Api28Impl: boolean isScreenReaderFocusable(android.view.View)
androidx.window.layout.SidecarCompat: void onWindowLayoutChangeListenerAdded(android.app.Activity)
androidx.media.AudioAttributesImplApi26Parcelizer: AudioAttributesImplApi26Parcelizer()
androidx.window.embedding.ActivityStack: int hashCode()
com.google.android.gms.internal.measurement.zzlp: zzlp()
io.flutter.embedding.engine.FlutterJNI: void nativeLoadDartDeferredLibrary(long,int,java.lang.String[])
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: boolean isEmpty()
androidx.window.layout.ActivityCompatHelperApi24: boolean isInMultiWindowMode(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void ensureNotAttachedToNative()
androidx.window.embedding.EmbeddingAdapter: androidx.window.embedding.SplitInfo translate(androidx.window.extensions.embedding.SplitInfo)
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: void setSplashDrawable(android.graphics.drawable.Drawable)
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode[] values()
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onReceivedHttpError(android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceResponse)
androidx.core.app.NotificationCompat$MessagingStyle$Api24Impl: android.app.Notification$MessagingStyle addMessage(android.app.Notification$MessagingStyle,android.app.Notification$MessagingStyle$Message)
androidx.core.app.RemoteInput$Api26Impl: android.app.RemoteInput$Builder setAllowDataType(android.app.RemoteInput$Builder,java.lang.String,boolean)
androidx.collection.SparseArrayCompat: SparseArrayCompat()
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityIntentPredicates(java.util.Set)
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier valueOf(java.lang.String)
com.google.android.gms.common.api.internal.LifecycleCallback: com.google.android.gms.common.api.internal.LifecycleFragment getChimeraLifecycleFragmentImpl(com.google.android.gms.common.api.internal.LifecycleActivity)
com.google.android.gms.internal.measurement.zzel: zzel()
androidx.window.layout.ActivityCompatHelperApi30: android.graphics.Rect maximumWindowBounds(android.app.Activity)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: ExtensionEmbeddingBackend$SplitListenerWrapper(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$702(io.flutter.embedding.android.FlutterSplashView$SavedState,android.os.Bundle)
com.google.android.gms.internal.measurement.zzjk: zzjk()
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status valueOf(java.lang.String)
androidx.core.app.NotificationCompatBuilder$Api23Impl: android.app.Notification$Action$Builder createBuilder(android.graphics.drawable.Icon,java.lang.CharSequence,android.app.PendingIntent)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void initialize(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.window.embedding.SplitController: void access$setStaticSplitRules(androidx.window.embedding.SplitController,java.util.Set)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void updateTexImage()
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPlatformMessage(long,java.lang.String,java.nio.ByteBuffer,int,int)
io.flutter.embedding.engine.FlutterOverlaySurface: int getId()
androidx.window.core.Bounds: int getWidth()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityCreated(com.google.android.gms.dynamic.IObjectWrapper,android.os.Bundle,long)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.EmbeddingInterfaceCompat initAndVerifyEmbeddingExtension()
androidx.core.app.NotificationCompatBuilder$Api31Impl: android.app.Notification$Builder setForegroundServiceBehavior(android.app.Notification$Builder,int)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
androidx.window.layout.SidecarAdapter$Companion: void setSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo,java.util.List)
android.support.v4.media.AudioAttributesImplApi26Parcelizer: androidx.media.AudioAttributesImplApi26 read(androidx.versionedparcelable.VersionedParcel)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer getCallback()
androidx.webkit.internal.ApiHelperForM: void setOffscreenPreRaster(android.webkit.WebSettings,boolean)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void requestPermission(com.dexterous.flutterlocalnotifications.PermissionRequestListener)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void postMessageToMainFrame(java.lang.reflect.InvocationHandler,android.net.Uri)
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
com.dexterous.flutterlocalnotifications.models.SoundSource: SoundSource(java.lang.String,int)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushTransform(float[])
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getTracingController()
kotlin.jvm.internal.FunctionReference: boolean isOperator()
androidx.window.embedding.EmptyEmbeddingComponent: void setEmbeddingRules(java.util.Set)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void clearMeasurementEnabled(long)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable compute()
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimation(android.view.View,java.lang.Runnable)
androidx.core.graphics.drawable.IconCompat: IconCompat()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebMessagePort(java.lang.Object)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: java.lang.String getVariationsHeader()
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getType(java.lang.Object)
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack getSecondaryActivityStack()
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowBackend access$getWindowBackend$p(androidx.window.layout.WindowInfoTrackerImpl)
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcelable)
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
io.flutter.embedding.android.FlutterView: void setVisibility(int)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onReceivedError(android.webkit.WebView,android.webkit.WebResourceRequest,java.lang.reflect.InvocationHandler)
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] values()
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: ExtensionEmbeddingBackend$EmbeddingCallbackImpl(androidx.window.embedding.ExtensionEmbeddingBackend)
io.flutter.embedding.engine.FlutterJNI: void onEndFrame()
androidx.window.embedding.MatcherUtils: boolean wildcardMatch(java.lang.String,java.lang.String)
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setCustomHeadsUpContentView(android.app.Notification$Builder,android.widget.RemoteViews)
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: AccessibilityBridge$CustomAccessibilityAction()
androidx.window.layout.SidecarWindowBackend$Companion: SidecarWindowBackend$Companion()
androidx.core.view.ViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
com.google.android.gms.internal.measurement.zzlm: com.google.android.gms.internal.measurement.zzlm[] values()
androidx.window.embedding.EmbeddingCompat: EmbeddingCompat(androidx.window.extensions.embedding.ActivityEmbeddingComponent,androidx.window.embedding.EmbeddingAdapter)
androidx.window.embedding.SplitPlaceholderRule: SplitPlaceholderRule(java.util.Set,android.content.Intent,int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.gms.measurement.AppMeasurement: java.lang.String getCurrentScreenName()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertSafeBrowsingResponse(java.lang.Object)
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader getImageReader()
com.google.android.gms.internal.measurement.zzgh: zzgh()
androidx.core.app.NotificationCompat$Builder$Api21Impl: android.media.AudioAttributes$Builder setContentType(android.media.AudioAttributes$Builder,int)
androidx.window.embedding.ActivityStack: java.lang.String toString()
androidx.window.layout.FoldingFeature$OcclusionType: FoldingFeature$OcclusionType(java.lang.String)
androidx.webkit.internal.ApiHelperForOMR1: void showInterstitial(android.webkit.SafeBrowsingResponse,boolean)
com.google.android.gms.internal.measurement.zzgi: zzgi()
androidx.window.layout.SidecarCompat$Companion: android.os.IBinder getActivityWindowToken$window_release(android.app.Activity)
androidx.core.view.ViewCompat$Api16Impl: void setImportantForAccessibility(android.view.View,int)
androidx.core.view.ViewCompat$Api19Impl: void setAccessibilityLiveRegion(android.view.View,int)
androidx.window.embedding.SplitPlaceholderRule: boolean equals(java.lang.Object)
androidx.core.app.AlarmManagerCompat$Api23Impl: void setExactAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent)
androidx.window.embedding.ExtensionEmbeddingBackend: void unregisterRule(androidx.window.embedding.EmbeddingRule)
io.flutter.embedding.engine.FlutterJNI: FlutterJNI()
com.google.android.gms.measurement.AppMeasurement: java.lang.String getAppInstanceId()
com.google.android.gms.internal.measurement.zzfc: zzfc()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setTimeoutAfter(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.window.embedding.SplitPairRule: boolean getFinishPrimaryWithSecondary()
androidx.window.embedding.EmbeddingBackend: void registerSplitListenerForActivity(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.window.layout.SidecarCompat$Companion: SidecarCompat$Companion()
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: void setClearCachedDataIntervalMs(int)
androidx.window.R: R()
com.google.firebase.datatransport.TransportRegistrar: TransportRegistrar()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void removeWebMessageListener(java.lang.String)
androidx.media.AudioAttributesImplBaseParcelizer: void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel)
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: WindowMetricsCalculator$Companion$decorator$1()
androidx.core.app.NotificationCompatBuilder$Api28Impl: android.app.Notification$Builder addPerson(android.app.Notification$Builder,android.app.Person)
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void close()
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setSettingsText(android.app.Notification$Builder,java.lang.CharSequence)
com.google.android.gms.internal.measurement.zzfh: zzfh()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.app.Notification createNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
io.flutter.embedding.engine.FlutterJNI: java.lang.String getVMServiceUri()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getFinalClippingPaths()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: long calculateRepeatIntervalMilliseconds(com.dexterous.flutterlocalnotifications.models.NotificationDetails)
androidx.core.app.NotificationCompatBuilder$Api16Impl: android.app.Notification$Builder setUsesChronometer(android.app.Notification$Builder,boolean)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setDataCollectionEnabled(boolean)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getRootStableInsets()
io.flutter.embedding.engine.FlutterJNI: void setPlatformViewsController(io.flutter.plugin.platform.PlatformViewsController)
com.google.android.gms.tasks.Task: Task()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean hasInvalidLargeIcon(io.flutter.plugin.common.MethodChannel$Result,java.lang.Object,com.dexterous.flutterlocalnotifications.models.BitmapSource)
androidx.window.core.Bounds: int getLeft()
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat getEmbeddingExtension()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getConditionalUserProperties(java.lang.String,java.lang.String,com.google.android.gms.internal.measurement.zzcf)
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void setWebMessageCallback(java.lang.reflect.InvocationHandler,android.os.Handler)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.util.ArrayList loadScheduledNotifications(android.content.Context)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPointerDataPacket(long,java.nio.ByteBuffer,int)
com.google.android.gms.internal.measurement.zzmc: zzmc()
androidx.core.app.NotificationCompat$InboxStyle$Api16Impl: android.app.Notification$InboxStyle createInboxStyle(android.app.Notification$Builder)
com.google.android.gms.internal.measurement.zzgd: zzgd()
kotlinx.coroutines.internal.AtomicOp: AtomicOp()
com.google.android.gms.internal.measurement.zzga: zzga()
com.google.android.gms.internal.measurement.zzku: zzku()
com.google.android.gms.internal.measurement.zzjb: zzjb()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebResourceError(java.lang.Object)
androidx.fragment.app.FragmentActivity: FragmentActivity()
androidx.webkit.WebViewClientCompat: WebViewClientCompat()
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
androidx.window.layout.SidecarWindowBackend: void setWindowExtension(androidx.window.layout.ExtensionInterfaceCompat)
com.google.android.gms.internal.measurement.zzbn: android.os.IBinder asBinder()
androidx.window.core.Version: boolean equals(java.lang.Object)
kotlin.jvm.internal.CallableReference: CallableReference()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setMessagingStyle(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
kotlinx.coroutines.internal.OpDescriptor: OpDescriptor()
com.google.android.gms.internal.measurement.zzgr: zzgr()
kotlinx.coroutines.scheduling.Task: Task()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: androidx.core.app.NotificationManagerCompat getNotificationManager(android.content.Context)
androidx.window.embedding.EmbeddingAdapter: java.util.Set translate(java.util.Set)
androidx.window.layout.SidecarCompat: androidx.window.layout.WindowLayoutInfo getWindowLayoutInfo(android.app.Activity)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityPairPredicates(java.util.Set)
androidx.core.app.BundleCompat$Api18Impl: android.os.IBinder getBinder(android.os.Bundle,java.lang.String)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: HardwareFoldingFeature$Type$Companion()
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle$Api24Impl: android.app.Notification$DecoratedCustomViewStyle createDecoratedCustomViewStyle()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
com.google.firebase.messaging.FirebaseMessagingRegistrar: com.google.firebase.messaging.FirebaseMessaging lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
androidx.window.embedding.SplitController: void registerRule(androidx.window.embedding.EmbeddingRule)
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalCacheDirs(android.content.Context)
com.google.android.gms.measurement.AppMeasurementReceiver: AppMeasurementReceiver()
io.flutter.embedding.engine.FlutterJNI: void nativeDestroy(long)
androidx.core.app.NotificationCompat$BubbleMetadata$Api30Impl: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
com.dexterous.flutterlocalnotifications.ScheduledNotificationBootReceiver: void onReceive(android.content.Context,android.content.Intent)
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
androidx.core.app.NotificationCompat$BigPictureStyle$Api31Impl: void showBigPictureWhenCollapsed(android.app.Notification$BigPictureStyle,boolean)
androidx.core.view.WindowInsetsCompat$Impl20: boolean equals(java.lang.Object)
kotlin.jvm.internal.Lambda: int getArity()
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority[] values()
com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState: com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState[] values()
androidx.window.embedding.EmbeddingInterfaceCompat: void setSplitRules(java.util.Set)
io.flutter.plugins.urllauncher.WebViewActivity: WebViewActivity()
com.google.firebase.concurrent.UiExecutor: com.google.firebase.concurrent.UiExecutor valueOf(java.lang.String)
androidx.window.layout.WindowInfoTrackerImpl$Companion: WindowInfoTrackerImpl$Companion()
androidx.webkit.internal.ApiHelperForM: androidx.webkit.WebMessageCompat createWebMessageCompat(android.webkit.WebMessage)
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable: AbstractSafeParcelable()
com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState: com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState valueOf(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode valueOf(java.lang.String)
androidx.window.layout.WindowInfoTracker$-CC: androidx.window.layout.WindowInfoTracker getOrCreate(android.content.Context)
io.flutter.view.FlutterCallbackInformation: io.flutter.view.FlutterCallbackInformation lookupCallbackInformation(long)
androidx.window.embedding.SplitController: java.util.Set getSplitRules()
androidx.window.layout.WindowMetrics: boolean equals(java.lang.Object)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$200(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl(androidx.core.view.WindowInsetsCompat)
androidx.window.layout.HardwareFoldingFeature: boolean equals(java.lang.Object)
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOpNoThrow(android.app.AppOpsManager,java.lang.String,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI spawn(java.lang.String,java.lang.String,java.lang.String,java.util.List)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type valueOf(java.lang.String)
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCurrentScreenClass(com.google.android.gms.internal.measurement.zzcf)
com.google.firebase.provider.FirebaseInitProvider: FirebaseInitProvider()
com.google.android.gms.internal.measurement.zzek: zzek()
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void applyGrouping(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation)
androidx.window.layout.HardwareFoldingFeature: boolean isSeparating()
androidx.window.embedding.SplitInfo: int hashCode()
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.FoldingFeature translate$window_release(android.app.Activity,androidx.window.extensions.layout.FoldingFeature)
kotlin.jvm.internal.Lambda: Lambda(int)
androidx.window.embedding.ActivityFilter: java.lang.String toString()
com.google.firebase.messaging.reporting.MessagingClientEvent$Event: com.google.firebase.messaging.reporting.MessagingClientEvent$Event[] values()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setRequestedWithHeaderOriginAllowList(java.util.Set)
androidx.window.layout.SidecarAdapter$Companion: int getSidecarDevicePosture$window_release(androidx.window.sidecar.SidecarDeviceState)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization valueOf(java.lang.String)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] values()
androidx.window.layout.SidecarCompat: void registerConfigurationChangeListener(android.app.Activity)
com.google.android.gms.internal.measurement.zzhn: zzhn()
androidx.window.layout.SidecarCompat$FirstAttachAdapter: SidecarCompat$FirstAttachAdapter(androidx.window.layout.SidecarCompat,android.app.Activity)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] values()
androidx.webkit.internal.ApiHelperForM: android.webkit.WebMessagePort[] createWebMessageChannel(android.webkit.WebView)
androidx.core.view.ViewCompat$Api16Impl: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener)
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: ScheduledNotificationRepeatFrequency(java.lang.String,int)
io.flutter.embedding.engine.FlutterJNI: void asyncWaitForVsync(long)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: FlutterMutatorsStack()
androidx.core.app.NotificationCompat$InboxStyle$Api16Impl: android.app.Notification$InboxStyle setSummaryText(android.app.Notification$InboxStyle,java.lang.CharSequence)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readMessagingStyleInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map,com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation)
androidx.core.view.ViewCompat$Api19Impl: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void setOnDescendantFocusChangeListener(android.view.View$OnFocusChangeListener)
com.google.android.datatransport.runtime.EventInternal: EventInternal()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceDestroyed(long)
androidx.core.app.NotificationCompat$CallStyle$Api20Impl: android.app.Notification$Builder addAction(android.app.Notification$Builder,android.app.Notification$Action)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void zonedSchedule(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.window.layout.SidecarCompat$DistinctElementCallback: SidecarCompat$DistinctElementCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void setSafeBrowsingAllowlist(java.util.Set,android.webkit.ValueCallback)
androidx.webkit.internal.ApiHelperForOMR1: android.net.Uri getSafeBrowsingPrivacyPolicyUrl()
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsets(int)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action$Builder addRemoteInput(android.app.Notification$Action$Builder,android.app.RemoteInput)
com.google.android.datatransport.cct.internal.ClientInfo: ClientInfo()
androidx.core.app.AppOpsManagerCompat$Api29Impl: android.app.AppOpsManager getSystemService(android.content.Context)
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState: io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState[] values()
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat valueOf(java.lang.String)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: ViewCompat$UnhandledKeyEventManager()
androidx.window.layout.SidecarWindowBackend: boolean isActivityRegistered(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: android.webkit.WebViewClient getWebViewClient()
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.window.embedding.EmptyEmbeddingComponent: void setSplitInfoCallback(java.util.function.Consumer)
androidx.window.embedding.MatcherUtils: boolean areComponentsMatching$window_release(android.content.ComponentName,android.content.ComponentName)
androidx.core.app.NotificationCompat$MessagingStyle$Api16Impl: void setBuilder(android.app.Notification$Style,android.app.Notification$Builder)
androidx.window.embedding.ExtensionEmbeddingBackend: void setEmbeddingExtension(androidx.window.embedding.EmbeddingInterfaceCompat)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept$lambda-1(androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper,java.util.List)
kotlinx.coroutines.channels.Send: Send()
androidx.core.app.NotificationCompatBuilder$Api17Impl: android.app.Notification$Builder setShowWhen(android.app.Notification$Builder,boolean)
io.flutter.embedding.engine.FlutterJNI: void nativeUnregisterTexture(long,long)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetRight(android.view.DisplayCutout)
androidx.media.AudioAttributesCompatParcelizer: androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.core.view.ViewCompat$Api21Impl: void stopNestedScroll(android.view.View)
androidx.window.embedding.SplitController: void setStaticSplitRules(java.util.Set)
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
android.support.v4.media.AudioAttributesImplApi26Parcelizer: void write(androidx.media.AudioAttributesImplApi26,androidx.versionedparcelable.VersionedParcel)
androidx.core.view.ViewCompat$Api19Impl: boolean isLaidOut(android.view.View)
io.flutter.embedding.engine.FlutterJNI: void nativeInit(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
com.dexterous.flutterlocalnotifications.models.MessageDetails: MessageDetails(java.lang.String,java.lang.Long,com.dexterous.flutterlocalnotifications.models.PersonDetails,java.lang.String,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Builder setLocusId(android.app.Notification$Builder,java.lang.Object)
com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig: EventStoreConfig()
androidx.core.view.ViewCompat$Api21Impl: float getZ(android.view.View)
com.google.firebase.ktx.FirebaseCommonKtxRegistrar: java.util.List getComponents()
androidx.window.layout.HardwareFoldingFeature: int hashCode()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getBlockNetworkLoads()
androidx.core.view.WindowInsetsCompat$Impl20: boolean isTypeVisible(int)
com.google.gson.internal.LinkedTreeMap: LinkedTreeMap()
com.dexterous.flutterlocalnotifications.ScheduledNotificationReceiver: ScheduledNotificationReceiver()
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource[] values()
androidx.window.layout.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerRemoved(android.app.Activity)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getFOLD()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
androidx.arch.core.executor.ArchTaskExecutor: ArchTaskExecutor()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setActivity(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsRegionalIndicator(int)
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService: JobInfoSchedulerService()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
androidx.core.view.ViewCompat$Api28Impl: java.lang.Object requireViewById(android.view.View,int)
androidx.window.layout.SidecarCompat: SidecarCompat(android.content.Context)
com.google.android.gms.internal.measurement.zzkn: zzkn()
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface: boolean isTracing()
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: ModuleDescriptor()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.util.Map extractNotificationResponseMap(android.content.Intent)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$602(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.WindowInsets)
io.flutter.embedding.engine.FlutterJNI: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: com.google.firebase.analytics.connector.AnalyticsConnector lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.util.List castList(java.lang.Class,java.util.Collection)
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.Integer tryParseInt(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void schedule(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.app.AlarmManagerCompat$Api23Impl: void setAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent)
androidx.core.app.NotificationManagerCompat$Api26Impl: android.app.NotificationChannel getNotificationChannel(android.app.NotificationManager,java.lang.String)
androidx.core.app.NotificationCompat$MessagingStyle$Api28Impl: android.app.Notification$MessagingStyle setGroupConversation(android.app.Notification$MessagingStyle,boolean)
androidx.window.layout.FoldingFeature$Orientation: java.lang.String toString()
androidx.lifecycle.ViewModelStore: ViewModelStore()
io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$FileChooserMode: io.flutter.plugins.webviewflutter.GeneratedAndroidWebView$FileChooserMode[] values()
androidx.window.layout.SidecarWindowBackend: void getWindowLayoutChangeCallbacks$annotations()
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.String[] getSupportedFeatures()
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
kotlinx.coroutines.android.AndroidDispatcherFactory: java.lang.String hintOnError()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.window.layout.WindowMetrics: android.graphics.Rect getBounds()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void getActiveNotificationMessagingStyle(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.view.WindowInsetsCompat$Impl30: boolean isVisible(int)
androidx.window.embedding.ActivityRule: boolean getAlwaysExpand()
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getTappableElementInsets()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] values()
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void showInterstitial(boolean)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onPrepare(android.view.WindowInsetsAnimation)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointRegionalIndicator(int)
androidx.window.layout.SidecarCompat$TranslatingCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTint(android.graphics.drawable.Drawable,int)
com.google.android.gms.internal.measurement.zzmn: zzmn()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedFling(android.view.View,float,float,boolean)
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeStableInsets()
androidx.window.core.Version$Companion: Version$Companion()
androidx.window.layout.WindowLayoutInfo: java.lang.String toString()
kotlin.jvm.internal.FunctionReference: boolean isSuspend()
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Builder setAllowSystemGeneratedContextualActions(android.app.Notification$Builder,boolean)
androidx.core.content.ContextCompat$Api26Impl: android.content.ComponentName startForegroundService(android.content.Context,android.content.Intent)
io.flutter.view.AccessibilityViewEmbedder: void copyAccessibilityFields(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeInfo)
androidx.window.core.Version: int compareTo(java.lang.Object)
androidx.window.embedding.ExtensionEmbeddingBackend: void setSplitRules(java.util.Set)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void deleteNotificationChannelGroup(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.window.layout.WindowMetrics: int hashCode()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceWindowChanged(long,android.view.Surface)
io.flutter.view.AccessibilityViewEmbedder: boolean performAction(int,int,android.os.Bundle)
androidx.core.view.WindowInsetsCompat$Impl: boolean isRound()
androidx.window.layout.DisplayCompatHelperApi17: void getRealSize(android.view.Display,android.graphics.Point)
